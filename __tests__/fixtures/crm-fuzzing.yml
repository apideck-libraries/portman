openapi: 3.0.3
info:
  version: 4.1.0
  title: CRM API
  description: "Welcome to the CRM API."
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
servers:
  - url: 'https://unify.apideck.com'
    description: Production
security:
  - apiKey: []
    applicationId: []
    consumerId: []
tags:
  - name: Companies
    description: ''
  - name: Opportunities
    description: ''
  - name: Leads
    description: ''
  - name: Contacts
    description: ''
  - name: Pipelines
    description: ''
  - name: Notes
    description: ''
  - name: Users
    description: ''
  - name: Activities
    description: ''
components:
  schemas:
    Activity:
      type: object
      additionalProperties: false
      required:
        - type
      properties:
        id:
          type: string
          readOnly: true
          example: '12345'
        activity_datetime:
          type: string
          example: '2021-05-01T12:00:00.000Z'
          minLength: 1
          nullable: true
        duration_seconds:
          type: integer
          example: 1800
          minimum: 0
          nullable: true
        account_id:
          type: string
          example: '12345'
          nullable: true
        contact_id:
          type: string
          example: '12345'
          nullable: true
        company_id:
          type: string
          example: '12345'
          nullable: true
        opportunity_id:
          type: string
          example: '12345'
          nullable: true
        lead_id:
          type: string
          example: '12345'
          nullable: true
        owner_id:
          type: string
          example: '12345'
          nullable: true
        campaign_id:
          type: string
          example: '12345'
          nullable: true
        case_id:
          type: string
          example: '12345'
          nullable: true
        asset_id:
          type: string
          example: '12345'
          nullable: true
        contract_id:
          type: string
          example: '12345'
          nullable: true
        product_id:
          type: string
          example: '12345'
          nullable: true
        solution_id:
          type: string
          example: '12345'
          nullable: true
        custom_object_id:
          type: string
          example: '12345'
          nullable: true
        type:
          type: string
          enum:
            - call
            - meeting
            - email
            - note
            - task
            - send-letter
            - send-quote
            - other
          example: meeting
        title:
          type: string
          example: Meeting
          nullable: true
        description:
          type: string
          example: More info about the meeting
          nullable: true
        location:
          type: string
          example: Space
          nullable: true
        all_day_event:
          type: boolean
          example: false
        private:
          type: boolean
          example: true
        group_event:
          type: boolean
          example: true
        event_sub_type:
          type: string
          example: debrief
          nullable: true
        group_event_type:
          type: string
          example: Proposed
          nullable: true
        child:
          type: boolean
          example: false
        archived:
          type: boolean
          example: false
        deleted:
          type: boolean
          example: false
        show_as:
          type: string
          enum:
            - free
            - busy
          example: busy
        activity_date:
          type: string
          example: '2021-05-01'
          nullable: true
        duration_minutes:
          type: integer
          example: 30
          nullable: true
        start_datetime:
          type: string
          example: '2021-05-01T12:00:00.000Z'
          nullable: true
        end_datetime:
          type: string
          example: '2021-05-01T12:30:00.000Z'
          nullable: true
        end_date:
          type: string
          example: '2021-05-01'
          nullable: true
        recurrent:
          type: boolean
          example: false
        reminder_datetime:
          type: string
          example: '2021-05-01T17:00:00.000Z'
          nullable: true
        reminder_set:
          type: boolean
          example: false
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        updated_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        created_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
    Address:
      type: object
      properties:
        id:
          type: string
          example: '123'
          nullable: true
        type:
          type: string
          x-graphql-type-name: AddressType
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          example: primary
        name:
          type: string
          example: HQ US
          nullable: true
        line1:
          type: string
          example: Main street
          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
          nullable: true
        line2:
          type: string
          example: 'apt #'
          description: Line 2 of the address
          nullable: true
        city:
          type: string
          example: San Francisco
          description: Name of city.
          nullable: true
        state:
          type: string
          example: CA
          description: Name of state
          nullable: true
        postal_code:
          type: string
          example: '94104'
          description: Zip code or equivalent.
          nullable: true
        country:
          type: string
          example: US
          description: country code according to ISO 3166-1 alpha-2.
          nullable: true
        latitude:
          type: string
          example: '40.759211'
          nullable: true
        longitude:
          type: string
          example: '-73.984638'
          nullable: true
    BadRequest:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              example:
                missing:
                  - - foobar: required
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#requestbodyvalidationerror'
    BankAccount:
      type: object
      properties:
        iban:
          type: string
          example: CH2989144532982975332
          nullable: true
        bic:
          type: string
          example: AUDSCHGGXXX
          nullable: true
    CompaniesFilter:
      type: object
      x-graphql-type-name: CompaniesFilter
      example:
        name: SpaceX
      properties:
        name:
          type: string
          description: Name of the company to filter on
          example: SpaceX
      additionalProperties: false
    CompaniesSort:
      type: object
      x-graphql-type-name: CompaniesSort
      example:
        by: created_at
        direction: desc
      properties:
        by:
          type: string
          description: The field on which to sort the Companies
          enum:
            - created_at
            - updated_at
            - name
          example: created_at
        direction:
          type: string
          description: The direction in which to sort the Companies
          enum:
            - asc
            - desc
          default: asc
      required:
        - by
      additionalProperties: false
    Company:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: '12345'
        name:
          type: string
          example: Copper
          minLength: 1
        interaction_count:
          type: integer
          example: 1
          readOnly: true
          nullable: true
        owner_id:
          type: string
          example: '12345'
        image_url:
          type: string
          example: 'https://www.spacex.com/static/images/share.jpg'
          nullable: true
        description:
          type: string
          example: 'A crm that works for you, so you can spend time on relationships instead of data.'
          nullable: true
        vat_number:
          description: VAT number
          type: string
          example: BE0689615164
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        status:
          type: string
          minLength: 1
          example: Open
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        updated_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        created_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
    Contact:
      required:
        - name
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        name:
          type: string
          example: Elon Musk
          minLength: 1
        owner_id:
          type: string
          example: '54321'
          nullable: true
        company_id:
          type: string
          example: '23456'
          nullable: true
        company_name:
          type: string
          example: '23456'
          nullable: true
        lead_id:
          type: string
          example: '34567'
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        middle_name:
          type: string
          example: D.
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        prefix:
          type: string
          example: Mr.
          nullable: true
        suffix:
          type: string
          example: PhD
          nullable: true
        title:
          type: string
          example: CEO
          nullable: true
        department:
          type: string
          example: Engineering
          nullable: true
        language:
          type: string
          example: EN
          description: language code according to ISO 639-1. For the United States - EN
          nullable: true
        gender:
          type: string
          enum:
            - male
            - female
            - unisex
          example: female
          nullable: true
        birthday:
          type: string
          example: '2000-08-12'
          nullable: true
        image:
          type: string
          example: 'https://logo.clearbit.com/spacex.com?s=128'
          nullable: true
        lead_source:
          type: string
          minLength: 1
          example: Cold Call
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        description:
          type: string
          example: Internal champion
          nullable: true
        status:
          type: string
          example: open
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        updated_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
      additionalProperties: false
    ContactsFilter:
      type: object
      x-graphql-type-name: ContactsFilter
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
      properties:
        name:
          type: string
          description: Name of the contact to filter on
          example: Elon Musk
        first_name:
          type: string
          description: First name of the contact to filter on
          example: Elon
        last_name:
          type: string
          description: Last name of the contact to filter on
          example: Musk
        email:
          type: string
          description: E-mail of the contact to filter on
          example: elon@tesla.com
      additionalProperties: false
    ContactsSort:
      type: object
      x-graphql-type-name: ContactsSort
      example:
        by: created_at
        direction: desc
      properties:
        by:
          type: string
          description: The field on which to sort the Contacts
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          example: created_at
        direction:
          type: string
          description: The direction in which to sort the Contacts
          enum:
            - asc
            - desc
          default: asc
      required:
        - by
      additionalProperties: false
    CreateActivityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: activities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateCompanyResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateContactResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateLeadResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateNoteResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: notes
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateOpportunityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: opportunities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreatePipelineResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: pipelines
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CreateUserResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: users
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    CustomField:
      type: object
      required:
        - id
      additionalProperties: false
      properties:
        id:
          type: string
          example: custom_technologies
        value:
          anyOf:
            - type: string
              example: Uses Salesforce and Marketo
              nullable: true
            - type: number
              example: 10
              nullable: true
            - type: boolean
              example: true
              nullable: true
            - type: array
              items:
                type: string
    DeleteActivityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: activities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteCompanyResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteContactResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteLeadResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteNoteResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: notes
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteOpportunityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeletePipelineResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    DeleteUserResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: users
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    Email:
      required:
        - email
      type: object
      properties:
        id:
          type: string
          example: '123'
        email:
          type: string
          format: email
          example: elon@musk.com
          minLength: 1
        type:
          type: string
          x-graphql-type-name: EmailType
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          example: primary
    GetActivitiesResponse:
      x-graphql-type-name: ActivityList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: activities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetActivityResponse:
      x-graphql-type-name: activity
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: activities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Activity'
    GetCompaniesResponse:
      x-graphql-type-name: CompanyList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetCompanyResponse:
      x-graphql-type-name: company
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Company'
    GetContactResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Contact'
    GetContactsResponse:
      x-graphql-type-name: ContactList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetLeadResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Lead'
    GetLeadsResponse:
      x-graphql-type-name: LeadList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetNoteResponse:
      x-graphql-type-name: note
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: notes
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Note'
    GetNotesResponse:
      x-graphql-type-name: NoteList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: notes
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetOpportunitiesResponse:
      x-graphql-type-name: OpportunityList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: opportunities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetOpportunityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: opportunities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Opportunity'
    GetPipelineResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: pipelines
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/Pipeline'
    GetPipelinesResponse:
      x-graphql-type-name: PipelinesList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: pipelines
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Pipeline'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    GetUserResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/User'
    GetUsersResponse:
      x-graphql-type-name: UserList
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: users
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
    Lead:
      required:
        - name
        - company_name
      x-pii:
        - name
        - email
        - first_name
        - last_name
      additionalProperties: false
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        name:
          type: string
          example: Elon Musk
          minLength: 1
        company_name:
          type: string
          example: Spacex
          nullable: true
        owner_id:
          type: string
          example: '54321'
        company_id:
          type: string
          example: '2'
          nullable: true
        contact_id:
          type: string
          example: '2'
          nullable: true
        lead_source:
          type: string
          example: Cold Call
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        description:
          type: string
          example: A thinker
          nullable: true
        prefix:
          type: string
          example: Sir
          nullable: true
        title:
          type: string
          example: CEO
          nullable: true
        language:
          type: string
          example: EN
          description: language code according to ISO 639-1. For the United States - EN
          nullable: true
        status:
          type: string
          example: New
          nullable: true
        monetary_amount:
          type: number
          example: 75000
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
    LeadsFilter:
      type: object
      x-graphql-type-name: LeadsFilter
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
      properties:
        name:
          type: string
          description: Name of the lead to filter on
          example: Elon Musk
        first_name:
          type: string
          description: First name of the lead to filter on
          example: Elon
        last_name:
          type: string
          description: Last name of the lead to filter on
          example: Musk
        email:
          type: string
          description: E-mail of the lead to filter on
          example: elon@tesla.com
      additionalProperties: false
    LeadsSort:
      type: object
      x-graphql-type-name: LeadsSort
      example:
        by: created_at
        direction: desc
      properties:
        by:
          type: string
          description: The field on which to sort the Leads
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          example: created_at
        direction:
          type: string
          description: The direction in which to sort the Leads
          enum:
            - asc
            - desc
          default: asc
      required:
        - by
      additionalProperties: false
    Links:
      type: object
      description: Links to navigate to previous or next pages through the API
      properties:
        previous:
          type: string
          description: Link to navigate to the previous page through the API
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
          nullable: true
        current:
          type: string
          description: Link to navigate to the current page through the API
          example: 'https://unify.apideck.com/crm/companies'
        next:
          type: string
          description: Link to navigate to the previous page through the API
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
          nullable: true
    Meta:
      type: object
      description: Reponse metadata
      properties:
        items_on_page:
          type: integer
          description: Number of items returned in the data property of the response
          example: 50
        cursors:
          type: object
          description: Cursors to navigate to previous or next pages through the API
          properties:
            previous:
              type: string
              description: Cursor to navigate to the previous page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              type: string
              description: Cursor to navigate to the current page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              type: string
              description: Cursor to navigate to the next page of results through the API
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
    NotFoundResponse:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 404
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Found
        typeName:
          type: string
          description: The type of error returned
          example: EntityNotFoundError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unknown Widget
        detail:
          anyOf:
            - type: string
              example: "Could not find widget with id: '123'"
            - type: object
              example:
                not_found:
                  entity: widget
                  id: '123'
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#entitynotfounderror'
    NotImplemented:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 501
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Not Implemented
        typeName:
          type: string
          description: The type of error returned
          example: MappingError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unmapped Attribute
        detail:
          anyOf:
            - type: string
              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'
            - type: object
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#mappingerror'
    Note:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
          example: '12345'
        title:
          type: string
          example: Meeting Notes
        content:
          type: string
          example: Office hours are 9AM-6PM
        owner_id:
          type: string
          example: '12345'
        updated_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        created_by:
          type: string
          example: '12345'
          readOnly: true
          nullable: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
    OpportunitiesFilter:
      type: object
      x-graphql-type-name: OpportunitiesFilter
      example:
        status: Completed
        monetary_amount: 75000
      properties:
        title:
          type: string
          description: Title of the opportunity to filter on
          example: Tesla deal
        status:
          type: string
          description: Status to filter on
          example: Completed
        monetary_amount:
          type: number
          description: Monetary amount to filter on
          example: 75000
        win_probability:
          type: number
          description: Win probability to filter on
          example: 50
      additionalProperties: false
    OpportunitiesSort:
      type: object
      x-graphql-type-name: OpportunitiesSort
      example:
        by: created_at
        direction: desc
      properties:
        by:
          type: string
          description: The field on which to sort the Opportunities
          enum:
            - created_at
            - updated_at
            - title
            - win_probability
            - monetary_amount
            - status
          example: created_at
        direction:
          type: string
          description: The direction in which to sort the Opportunities
          enum:
            - asc
            - desc
          default: asc
      required:
        - by
      additionalProperties: false
    Opportunity:
      type: object
      required:
        - title
        - primary_contact_id
      additionalProperties: false
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        title:
          type: string
          example: New Rocket
          minLength: 1
        primary_contact_id:
          type: string
          example: '12345'
          nullable: true
        description:
          type: string
          minLength: 1
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          nullable: true
        monetary_amount:
          type: number
          example: 75000
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        win_probability:
          type: number
          example: 40
          nullable: true
        close_date:
          type: string
          example: '2020-10-30'
          format: date
          nullable: true
        loss_reason_id:
          type: string
          example: '12345'
          nullable: true
        loss_reason:
          type: string
          example: No budget
          nullable: true
        won_reason_id:
          type: string
          example: '12345'
          nullable: true
        won_reason:
          type: string
          example: Best pitch
          nullable: true
        pipeline_id:
          type: string
          example: '12345'
          nullable: true
        pipeline_stage_id:
          type: string
          example: '12345'
          nullable: true
        source_id:
          type: string
          example: '12345'
          nullable: true
        lead_id:
          type: string
          example: '12345'
          nullable: true
        contact_id:
          type: string
          example: '12345'
          nullable: true
        company_id:
          type: string
          example: '12345'
          nullable: true
        company_name:
          type: string
          example: Copper
          nullable: true
        owner_id:
          type: string
          example: '12345'
          nullable: true
        priority:
          type: string
          minLength: 1
          example: None
          nullable: true
        status:
          type: string
          minLength: 1
          example: Open
          nullable: true
        status_id:
          type: string
          example: '12345'
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
        interaction_count:
          type: number
          example: 0
          readOnly: true
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        date_stage_changed:
          type: string
          example: '2020-09-30T00:00:00.000Z'
          format: date-time
          nullable: true
          readOnly: true
        date_last_contacted:
          type: string
          example: '2020-09-30T00:00:00.000Z'
          format: date-time
          nullable: true
          readOnly: true
        date_lead_created:
          type: string
          example: '2020-09-30T00:00:00.000Z'
          format: date-time
          nullable: true
          readOnly: true
        updated_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          format: date-time
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          format: date-time
          readOnly: true
    PaymentRequired:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 402
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Payment Required
        typeName:
          type: string
          description: The type of error returned
          example: RequestLimitError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Request Limit Reached
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: You have reached your limit of 2000
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#requestlimiterror'
    PhoneNumber:
      required:
        - number
      type: object
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        number:
          type: string
          example: 111-111-1111
          minLength: 1
        type:
          type: string
          x-graphql-type-name: PhoneType
          enum:
            - primary
            - secondary
            - home
            - office
            - mobile
            - assistant
            - fax
            - other
          example: primary
    Pipeline:
      required:
        - name
      x-pii: []
      properties:
        id:
          type: string
          example: default
        name:
          type: string
          example: Sales Pipeline
          minLength: 1
        currency:
          type: string
          example: USD
        archived:
          type: boolean
          example: false
        display_order:
          type: integer
          example: 1
        stages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: contractsent
                readOnly: true
              name:
                type: string
                example: Contract Sent
              value:
                type: string
                example: CONTRACT_SENT
              display_order:
                type: integer
                example: 1
        updated_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
      additionalProperties: false
    SocialLink:
      required:
        - url
      type: object
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        code:
          type: number
          example: 1
          minimum: 1
          maximum: 100
          nullable: true
        url:
          type: string
          example: 'https://www.twitter.com/apideck-io'
          minLength: 1
        type:
          type: string
          example: twitter
          nullable: true
    Tags:
      type: array
      items:
        type: string
      example:
        - New
    User:
      required:
        - email
      x-pii:
        - username
        - first_name
        - last_name
        - email
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        email:
          type: string
          format: email
          example: elon@musk.com
          minLength: 1
        parent_id:
          type: string
          example: '54321'
          nullable: true
        username:
          type: string
          example: masterofcoin
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        image:
          type: string
          example: 'https://logo.clearbit.com/spacex.com?s=128'
          nullable: true
        language:
          type: string
          example: EN
          nullable: true
        status:
          type: string
          example: active
          nullable: true
        password:
          type: string
          example: supersecretpassword
          writeOnly: true
        updated_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
    Unauthorized:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 401
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unauthorized
        typeName:
          type: string
          description: The type of error returned
          example: UnauthorizedError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Unauthorized Request
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: Failed to generate valid JWT Session. Verify applicationId is correct
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    UnexpectedError:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Bad Request
        typeName:
          type: string
          description: The type of error returned
          example: RequestHeadersValidationError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid Params
        detail:
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              example:
                missing:
                  - - x-apideck-consumer-id: required
          description: Contains parameter or domain specific information related to the error and why it occured.
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    UnifiedId:
      title: UnifiedId
      required:
        - id
      properties:
        id:
          type: string
          readOnly: true
          example: '12345'
    Unprocessable:
      properties:
        status_code:
          type: number
          description: HTTP status code
          example: 422
        error:
          type: string
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          example: Unprocessable Entity
        typeName:
          type: string
          description: The type of error returned
          example: InvalidStateError
        message:
          type: string
          description: A human-readable message providing more details about the error.
          example: Invalid State
        detail:
          type: string
          description: Contains parameter or domain specific information related to the error and why it occured.
          example: State did not include unified_api
        ref:
          type: string
          description: Link to documentation of error type
          example: 'https://developers.apideck.com/errors#invalidstateerror'
    UpdateActivityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: activities
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateCompanyResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateContactResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateLeadResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateNoteResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: notes
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateOpportunityResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdatePipelineResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: pipelines
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    UpdateUserResponse:
      type: object
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      properties:
        status_code:
          type: integer
          description: HTTP Response Status Code
          example: 200
        status:
          type: string
          description: HTTP Response Status
          example: OK
        service:
          type: string
          description: Apideck ID of service provider
          example: zoho-crm
        resource:
          type: string
          description: Unified API resource name
          example: companies
        operation:
          type: string
          description: Operation performed
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
    Website:
      type: object
      required:
        - url
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        url:
          type: string
          example: 'http://example.com'
          minLength: 1
        type:
          type: string
          x-graphql-type-name: WebsiteType
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          example: primary
  parameters:
    applicationId:
      name: x-apideck-app-id
      in: header
      required: true
      description: The ID of your Unify application
      example: Foo Bar
      schema:
        type: string
        minLength: 2
        maxLength: 15
    serviceId:
      name: x-apideck-service-id
      in: header
      description: 'Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.'
      schema:
        type: string
    consumerId:
      name: x-apideck-consumer-id
      in: header
      required: true
      description: ID of the consumer which you want to get or push data from
      example: 10
      schema:
        type: number
        minimum: 10
        maximum: 100
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: true
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    limit:
      name: limit
      in: query
      description: Number of records to return
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
        default: null
    contactsFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsFilter'
    contactsSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsSort'
    opportunitiesFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesFilter'
    opportunitiesSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesSort'
    companiesFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesFilter'
    companiesSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesSort'
    leadsFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsFilter'
    leadsSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsSort'
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    CreateActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateActivityResponse'
    CreateCompany:
      description: Company created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCompanyResponse'
    CreateContact:
      description: Contact created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateContactResponse'
    CreateLead:
      description: Lead created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLeadResponse'
    CreateNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateNoteResponse'
    CreateOpportunity:
      description: Opportunity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOpportunityResponse'
    CreatePipeline:
      description: Pipeline created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePipelineResponse'
    CreateUser:
      description: User created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
    DeleteActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteActivityResponse'
    DeleteCompany:
      description: Company deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCompanyResponse'
    DeleteContact:
      description: Contact deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteContactResponse'
    DeleteLead:
      description: Lead deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteLeadResponse'
    DeleteNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteNoteResponse'
    DeleteOpportunity:
      description: Opportunity deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteOpportunityResponse'
    DeletePipeline:
      description: Pipeline deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePipelineResponse'
    DeleteUser:
      description: User deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteUserResponse'
    GetActivitiesResponse:
      description: Activities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivitiesResponse'
    GetActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivityResponse'
    GetCompanies:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompaniesResponse'
    GetCompany:
      description: Company
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompanyResponse'
    GetContact:
      description: Contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactResponse'
    GetContacts:
      description: Contacts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactsResponse'
    GetLead:
      description: Lead
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadResponse'
    GetLeads:
      description: Leads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadsResponse'
    GetNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNoteResponse'
    GetNotesResponse:
      description: Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotesResponse'
    GetOpportunities:
      description: Opportunities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunitiesResponse'
    GetOpportunity:
      description: Opportunity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunityResponse'
    GetPipeline:
      description: Pipeline
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelineResponse'
    GetPipelines:
      description: Pipelines
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelinesResponse'
    GetUsers:
      description: Users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUsersResponse'
    GetUser:
      description: User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserResponse'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplemented'
    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequired'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedError'
    Unprocessable:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unprocessable'
    UpdateActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateActivityResponse'
    UpdateCompany:
      description: Company updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCompanyResponse'
    UpdateContact:
      description: Contact updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContactResponse'
    UpdateLead:
      description: Lead updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLeadResponse'
    UpdateNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateNoteResponse'
    UpdateOpportunity:
      description: Opportunity updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOpportunityResponse'
    UpdatePipeline:
      description: Pipeline updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePipelineResponse'
    UpdateUser:
      description: User updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserResponse'
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys.
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header.

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    applicationId:
      type: apiKey
      in: header
      name: x-apideck-app-id
      description: The ID of your Unify application
    consumerId:
      type: apiKey
      in: header
      name: x-apideck-consumer-id
      description: The ID of the consumer which you want to get or push data from
paths:
  /crm/companies:
    get:
      tags:
        - Companies
      operationId: companiesAll
      x-graphql-field-name: companies
      summary: List companies
      description: List companies
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/companiesFilter'
        - $ref: '#/components/parameters/companiesSort'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetCompanies'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Companies
      operationId: companiesAdd
      summary: Create company
      description: Create company
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          $ref: '#/components/responses/CreateCompany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/companies/{id}':
    get:
      tags:
        - Companies
      operationId: companiesOne
      summary: Get company
      description: Get company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetCompany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Companies
      operationId: companiesUpdate
      summary: Update company
      description: Update company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCompany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Companies
      operationId: companiesDelete
      summary: Delete company
      description: Delete company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteCompany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/contacts:
    get:
      tags:
        - Contacts
      x-graphql-field-name: contacts
      operationId: contactsAll
      summary: List contacts
      description: List contacts
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/contactsFilter'
        - $ref: '#/components/parameters/contactsSort'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetContacts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Contacts
      operationId: contactsAdd
      summary: Create contact
      description: Create contact
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '201':
          $ref: '#/components/responses/CreateContact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/contacts/{id}':
    get:
      tags:
        - Contacts
      operationId: contactsOne
      summary: Get contact
      description: Get contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetContact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Contacts
      operationId: contactsUpdate
      summary: Update contact
      description: Update contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          $ref: '#/components/responses/UpdateContact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Contacts
      operationId: contactsDelete
      summary: Delete contact
      description: Delete contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteContact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/opportunities:
    get:
      tags:
        - Opportunities
      x-graphql-field-name: opportunities
      operationId: opportunitiesAll
      summary: List opportunities
      description: List opportunities
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/opportunitiesFilter'
        - $ref: '#/components/parameters/opportunitiesSort'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetOpportunities'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Opportunities
      operationId: opportunitiesAdd
      summary: Create opportunity
      description: Create opportunity
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '201':
          $ref: '#/components/responses/CreateOpportunity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/opportunities/{id}':
    get:
      tags:
        - Opportunities
      operationId: opportunitiesOne
      summary: Get opportunity
      description: Get opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetOpportunity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Opportunities
      operationId: opportunitiesUpdate
      summary: Update opportunity
      description: Update opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '200':
          $ref: '#/components/responses/UpdateOpportunity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Opportunities
      operationId: opportunitiesDelete
      summary: Delete opportunity
      description: Delete opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteOpportunity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/leads:
    get:
      tags:
        - Leads
      x-graphql-field-name: leads
      operationId: leadsAll
      summary: List leads
      description: List leads
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/leadsFilter'
        - $ref: '#/components/parameters/leadsSort'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetLeads'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Leads
      operationId: leadsAdd
      summary: Create lead
      description: Create lead
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '201':
          $ref: '#/components/responses/CreateLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/leads/{id}':
    get:
      tags:
        - Leads
      operationId: leadsOne
      summary: Get lead
      description: Get lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Leads
      operationId: leadsUpdate
      summary: Update lead
      description: Update lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Leads
      operationId: leadsDelete
      summary: Delete lead
      description: Delete lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/pipelines:
    get:
      tags:
        - Pipelines
      x-graphql-field-name: pipelines
      operationId: pipelinesAll
      summary: List pipelines
      description: List pipelines
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetPipelines'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Pipelines
      operationId: pipelinesAdd
      summary: Create pipeline
      description: Create pipeline
      x-apideck-upcoming: true
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '201':
          $ref: '#/components/responses/CreatePipeline'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/pipelines/{id}':
    get:
      tags:
        - Pipelines
      operationId: pipelinesOne
      summary: Get pipeline
      description: Get pipeline
      x-apideck-upcoming: true
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetPipeline'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Pipelines
      operationId: pipelinesUpdate
      summary: Update pipeline
      description: Update pipeline
      x-apideck-upcoming: true
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePipeline'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Pipelines
      operationId: pipelinesDelete
      summary: Delete pipeline
      description: Delete pipeline
      x-apideck-upcoming: true
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeletePipeline'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/notes:
    get:
      tags:
        - Notes
      x-graphql-field-name: notes
      operationId: notesAll
      summary: List notes
      description: List notes
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetNotesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Notes
      operationId: notesAdd
      summary: Create note
      description: Create note
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '201':
          $ref: '#/components/responses/CreateNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/notes/{id}':
    get:
      tags:
        - Notes
      operationId: notesOne
      summary: Get note
      description: Get note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Notes
      operationId: notesUpdate
      summary: Update note
      description: Update note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          $ref: '#/components/responses/UpdateNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Notes
      operationId: notesDelete
      summary: Delete note
      description: Delete note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/users:
    get:
      tags:
        - Users
      x-graphql-field-name: users
      operationId: usersAll
      summary: List users
      description: List users
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetUsers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Users
      operationId: usersAdd
      summary: Create user
      description: Create user
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          $ref: '#/components/responses/CreateUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/users/{id}':
    get:
      tags:
        - Users
      operationId: usersOne
      summary: Get user
      description: Get user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Users
      operationId: usersUpdate
      summary: Update user
      description: Update user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Users
      operationId: usersDelete
      summary: Delete user
      description: Delete user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteUser'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /crm/activities:
    get:
      tags:
        - Activities
      x-graphql-field-name: activities
      operationId: activitiesAll
      summary: List activities
      description: List activities
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetActivitiesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    post:
      tags:
        - Activities
      operationId: activitiesAdd
      summary: Create activity
      description: Create activity
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '201':
          $ref: '#/components/responses/CreateActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/crm/activities/{id}':
    get:
      tags:
        - Activities
      operationId: activitiesOne
      summary: Get activity
      description: Get activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/GetActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    patch:
      tags:
        - Activities
      operationId: activitiesUpdate
      summary: Update activity
      description: Update activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          $ref: '#/components/responses/UpdateActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
    delete:
      tags:
        - Activities
      operationId: activitiesDelete
      summary: Delete activity
      description: Delete activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      security:
        - apiKey: []
      responses:
        '200':
          $ref: '#/components/responses/DeleteActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
