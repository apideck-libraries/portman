openapi: 3.0.3
info:
  version: 5.0.0
  title: CRM API
  description: "Welcome to the CRM API.\n\nYou can use this API to access all CRM API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## GraphQL\n\nUse the [GraphQL playground](https://unify.apideck.com/graphql) to test out the GraphQL API.\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs. For example, you can list [opportunities](#tag/Opportunities), [companies](#tag/Companies) and [leads](#tag/Leads). Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nUpcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestBodyValidationError\n\nRequest body is not valid for the current endpoint. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### RequestParametersValidationError\n\nRequest parameters are not valid for the current endpoint. Check the spelling and types of your parameters, and ensure you are not passing parameters that are outside of the specification.\n\n#### RequestHeadersValidationError\n\nRequest headers are not valid for the current endpoint. Check the spelling and types of your headers, and ensure you are not passing headers that are outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### ConnectorProcessingError\n\nA Unified API request made via one of our downstream connectors returned a status code that was less than 400, along with a description of why the request could not be processed. Often this is due to the shape of request data being valid, but unable to be processed due to internal business logic - for example: an invalid relationship or `ID` present in your request.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Idempotence (upcoming)\n\nTo prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\nUniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example\_`2019-11-14T00:55:31.820Z`\_is defined by the\_ISO 8601\_standard. The\_T\_in the middle separates the year-month-day portion from the hour-minute-second portion. The\_Z\_on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The\_Z\_is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n"
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://unify.apideck.com'
    description: Production
paths:
  /crm/leads:
    get:
      operationId: leadsAll
      summary: List leads
      description: List leads
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/leadsFilter'
        - $ref: '#/components/parameters/leadsSort'
      responses:
        '200':
          $ref: '#/components/responses/GetLeads'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - apiKey: []
      tags:
        - Leads
      x-graphql-field-name: leads
    post:
      operationId: leadsAdd
      summary: Create lead
      description: Create lead
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/CreateLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - apiKey: []
      tags:
        - Leads
  '/crm/leads/{id}':
    get:
      operationId: leadsOne
      summary: Get lead
      description: Get lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/GetLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - apiKey: []
      tags:
        - Leads
    patch:
      operationId: leadsUpdate
      summary: Update lead
      description: Update lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/UpdateLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - apiKey: []
      tags:
        - Leads
    delete:
      operationId: leadsDelete
      summary: Delete lead
      description: Delete lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteLead'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/Unprocessable'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - apiKey: []
      tags:
        - Leads
components:
  parameters:
    applicationId:
      name: x-apideck-app-id
      in: header
      required: true
      description: The ID of your Unify application
      schema:
        type: string
    companiesFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesFilter'
    companiesSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesSort'
    consumerId:
      name: x-apideck-consumer-id
      in: header
      required: true
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
    contactsFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsFilter'
    contactsSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsSort'
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    leadsFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsFilter'
    leadsSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsSort'
    limit:
      name: limit
      in: query
      description: Number of records to return
      schema:
        type: integer
        default: 20
        maximum: 200
        minimum: 1
    opportunitiesFilter:
      name: filter
      in: query
      description: Apply filters (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesFilter'
    opportunitiesSort:
      name: sort
      in: query
      description: Apply sorting (beta)
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesSort'
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: true
    serviceId:
      name: x-apideck-service-id
      in: header
      description: 'Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.'
      schema:
        type: string
  schemas:
    Activity:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        activity_datetime:
          type: string
          example: '2021-05-01T12:00:00.000Z'
          minLength: 1
          nullable: true
        duration_seconds:
          type: integer
          example: 1800
          minimum: 0
          nullable: true
        account_id:
          type: string
          example: '12345'
          nullable: true
        contact_id:
          type: string
          example: '12345'
          nullable: true
        company_id:
          type: string
          example: '12345'
          nullable: true
        opportunity_id:
          type: string
          example: '12345'
          nullable: true
        lead_id:
          type: string
          example: '12345'
          nullable: true
        owner_id:
          type: string
          example: '12345'
          nullable: true
        campaign_id:
          type: string
          example: '12345'
          nullable: true
        case_id:
          type: string
          example: '12345'
          nullable: true
        asset_id:
          type: string
          example: '12345'
          nullable: true
        contract_id:
          type: string
          example: '12345'
          nullable: true
        product_id:
          type: string
          example: '12345'
          nullable: true
        solution_id:
          type: string
          example: '12345'
          nullable: true
        custom_object_id:
          type: string
          example: '12345'
          nullable: true
        type:
          type: string
          example: meeting
          enum:
            - call
            - meeting
            - email
            - note
            - task
            - send-letter
            - send-quote
            - other
        title:
          type: string
          example: Meeting
          nullable: true
        description:
          type: string
          example: More info about the meeting
          nullable: true
        location:
          type: string
          example: Space
          nullable: true
        all_day_event:
          type: boolean
          example: false
        private:
          type: boolean
          example: true
        group_event:
          type: boolean
          example: true
        event_sub_type:
          type: string
          example: debrief
          nullable: true
        group_event_type:
          type: string
          example: Proposed
          nullable: true
        child:
          type: boolean
          example: false
        archived:
          type: boolean
          example: false
        deleted:
          type: boolean
          example: false
        show_as:
          type: string
          example: busy
          enum:
            - free
            - busy
        activity_date:
          type: string
          example: '2021-05-01'
          nullable: true
        duration_minutes:
          type: integer
          example: 30
          nullable: true
        start_datetime:
          type: string
          example: '2021-05-01T12:00:00.000Z'
          nullable: true
        end_datetime:
          type: string
          example: '2021-05-01T12:30:00.000Z'
          nullable: true
        end_date:
          type: string
          example: '2021-05-01'
          nullable: true
        recurrent:
          type: boolean
          example: false
        reminder_datetime:
          type: string
          example: '2021-05-01T17:00:00.000Z'
          nullable: true
        reminder_set:
          type: boolean
          example: false
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        updated_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
      additionalProperties: false
      required:
        - type
    Address:
      type: object
      properties:
        id:
          type: string
          example: '123'
          nullable: true
        type:
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          x-graphql-type-name: AddressType
        name:
          type: string
          example: HQ US
          nullable: true
        line1:
          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
          type: string
          example: Main street
          nullable: true
        line2:
          description: Line 2 of the address
          type: string
          example: 'apt #'
          nullable: true
        city:
          description: Name of city.
          type: string
          example: San Francisco
          nullable: true
        state:
          description: Name of state
          type: string
          example: CA
          nullable: true
        postal_code:
          description: Zip code or equivalent.
          type: string
          example: '94104'
          nullable: true
        country:
          description: country code according to ISO 3166-1 alpha-2.
          type: string
          example: US
          nullable: true
        latitude:
          type: string
          example: '40.759211'
          nullable: true
        longitude:
          type: string
          example: '-73.984638'
          nullable: true
    BadRequest:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 400
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Bad Request
        typeName:
          description: The type of error returned
          type: string
          example: RequestHeadersValidationError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid Params
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              example:
                missing:
                  - foobar: required
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#requestbodyvalidationerror'
    BankAccount:
      type: object
      properties:
        iban:
          type: string
          example: CH2989144532982975332
          nullable: true
        bic:
          type: string
          example: AUDSCHGGXXX
          nullable: true
    CompaniesFilter:
      type: object
      properties:
        name:
          description: Name of the company to filter on
          type: string
          example: SpaceX
      example:
        name: SpaceX
      additionalProperties: false
      x-graphql-type-name: CompaniesFilter
    CompaniesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Companies
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
          x-graphql-type-name: CompaniesSortBy
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      required:
        - by
      x-graphql-type-name: CompaniesSort
    Company:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        name:
          type: string
          example: SpaceX
          minLength: 1
        interaction_count:
          type: integer
          example: 1
          nullable: true
          readOnly: true
        owner_id:
          type: string
          example: '12345'
        image:
          type: string
          example: 'https://www.spacex.com/static/images/share.jpg'
          nullable: true
        description:
          type: string
          example: 'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.'
          nullable: true
        vat_number:
          description: VAT number
          type: string
          example: BE0689615164
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        status:
          type: string
          example: Open
          minLength: 1
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        annual_revenue:
          description: Annual Revenue
          type: string
          example: +$35m
          nullable: true
        number_of_employees:
          description: Number of employees
          type: string
          example: 500-1000
          nullable: true
        industry:
          description: Industry
          type: string
          example: Apparel
          nullable: true
        ownership:
          description: Ownership
          type: string
          example: Public
          nullable: true
        parent_id:
          description: Parent ID
          type: string
          example: '22345'
          readOnly: true
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        last_activity_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        deleted:
          type: boolean
          example: false
          readOnly: true
        updated_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
      additionalProperties: false
      required:
        - name
    Contact:
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        name:
          type: string
          example: Elon Musk
          minLength: 1
        owner_id:
          type: string
          example: '54321'
          nullable: true
        company_id:
          type: string
          example: '23456'
          nullable: true
        company_name:
          type: string
          example: '23456'
          nullable: true
        lead_id:
          type: string
          example: '34567'
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        middle_name:
          type: string
          example: D.
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        prefix:
          type: string
          example: Mr.
          nullable: true
        suffix:
          type: string
          example: PhD
          nullable: true
        title:
          type: string
          example: CEO
          nullable: true
        department:
          type: string
          example: Engineering
          nullable: true
        language:
          description: language code according to ISO 639-1. For the United States - EN
          type: string
          example: EN
          nullable: true
        gender:
          type: string
          example: female
          enum:
            - male
            - female
            - unisex
          nullable: true
        birthday:
          type: string
          example: '2000-08-12'
          nullable: true
        image:
          type: string
          example: 'https://unavatar.io/elon-musk'
          nullable: true
        lead_source:
          type: string
          example: Cold Call
          minLength: 1
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        description:
          type: string
          example: Internal champion
          nullable: true
        status:
          type: string
          example: open
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        first_call_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        first_email_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        last_activity_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
      additionalProperties: false
      required:
        - name
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    ContactsFilter:
      type: object
      properties:
        name:
          description: Name of the contact to filter on
          type: string
          example: Elon Musk
        first_name:
          description: First name of the contact to filter on
          type: string
          example: Elon
        last_name:
          description: Last name of the contact to filter on
          type: string
          example: Musk
        email:
          description: E-mail of the contact to filter on
          type: string
          example: elon@tesla.com
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
      additionalProperties: false
      x-graphql-type-name: ContactsFilter
    ContactsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Contacts
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          x-graphql-type-name: ContactsSortBy
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      required:
        - by
      x-graphql-type-name: ContactsSort
    CreateActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreatePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CustomField:
      type: object
      properties:
        id:
          type: string
          example: custom_technologies
        value:
          anyOf:
            - type: string
              example: Uses Salesforce and Marketo
              nullable: true
            - type: number
              example: 10
              nullable: true
            - type: boolean
              example: true
              nullable: true
            - type: array
              items:
                type: string
      additionalProperties: false
      required:
        - id
    DeleteActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeletePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    Email:
      type: object
      properties:
        id:
          type: string
          example: '123'
        email:
          type: string
          format: email
          example: elon@musk.com
          minLength: 1
        type:
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          x-graphql-type-name: EmailType
      required:
        - email
    GetActivitiesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: ActivityList
    GetActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Activity'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: activity
    GetCompaniesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: CompanyList
    GetCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Company'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: company
    GetContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Contact'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetContactsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: ContactList
    GetLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Lead'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetLeadsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: LeadList
    GetNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Note'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: note
    GetNotesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: NoteList
    GetOpportunitiesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: OpportunityList
    GetOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Opportunity'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetPipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Pipeline'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetPipelinesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/Pipeline'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: PipelinesList
    GetUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/User'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetUsersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-graphql-type-name: UserList
    Lead:
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        name:
          type: string
          example: Elon Musk
          minLength: 1
        company_name:
          type: string
          example: Spacex
          nullable: true
        owner_id:
          type: string
          example: '54321'
        company_id:
          type: string
          example: '2'
          nullable: true
        contact_id:
          type: string
          example: '2'
          nullable: true
        lead_source:
          type: string
          example: Cold Call
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        description:
          type: string
          example: A thinker
          nullable: true
        prefix:
          type: string
          example: Sir
          nullable: true
        title:
          type: string
          example: CEO
          nullable: true
        language:
          description: language code according to ISO 639-1. For the United States - EN
          type: string
          example: EN
          nullable: true
        status:
          type: string
          example: New
          nullable: true
        monetary_amount:
          type: number
          example: 75000
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        fax:
          type: string
          example: '+12129876543'
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
      additionalProperties: false
      required:
        - name
        - company_name
      x-pii:
        - name
        - email
        - first_name
        - last_name
    LeadsFilter:
      type: object
      properties:
        name:
          description: Name of the lead to filter on
          type: string
          example: Elon Musk
        first_name:
          description: First name of the lead to filter on
          type: string
          example: Elon
        last_name:
          description: Last name of the lead to filter on
          type: string
          example: Musk
        email:
          description: E-mail of the lead to filter on
          type: string
          example: elon@tesla.com
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
      additionalProperties: false
      x-graphql-type-name: LeadsFilter
    LeadsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Leads
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          x-graphql-type-name: LeadsSortBy
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      required:
        - by
      x-graphql-type-name: LeadsSort
    Links:
      description: Links to navigate to previous or next pages through the API
      type: object
      properties:
        previous:
          description: Link to navigate to the previous page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
          nullable: true
        current:
          description: Link to navigate to the current page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies'
        next:
          description: Link to navigate to the previous page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
          nullable: true
    Meta:
      description: Reponse metadata
      type: object
      properties:
        items_on_page:
          description: Number of items returned in the data property of the response
          type: integer
          example: 50
        cursors:
          description: Cursors to navigate to previous or next pages through the API
          type: object
          properties:
            previous:
              description: Cursor to navigate to the previous page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              description: Cursor to navigate to the current page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              description: Cursor to navigate to the next page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
    SortDirection:
      description: The direction in which to sort the results
      type: string
      default: asc
      enum:
        - asc
        - desc
    NotFoundResponse:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 404
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Not Found
        typeName:
          description: The type of error returned
          type: string
          example: EntityNotFoundError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Unknown Widget
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          anyOf:
            - type: string
              example: 'Could not find widget with id: ''123'''
            - type: object
              example:
                not_found:
                  entity: widget
                  id: '123'
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#entitynotfounderror'
    NotImplemented:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 501
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Not Implemented
        typeName:
          description: The type of error returned
          type: string
          example: MappingError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Unmapped Attribute
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          anyOf:
            - type: string
              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'
            - type: object
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#mappingerror'
    Note:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        title:
          type: string
          example: Meeting Notes
        content:
          example: Office hours are 9AM-6PM
          type: string
        owner_id:
          type: string
          example: '12345'
        updated_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
      additionalProperties: false
    OpportunitiesFilter:
      type: object
      properties:
        title:
          description: Title of the opportunity to filter on
          type: string
          example: Tesla deal
        status:
          description: Status to filter on
          type: string
          example: Completed
        monetary_amount:
          description: Monetary amount to filter on
          type: number
          example: 75000
        win_probability:
          description: Win probability to filter on
          type: number
          example: 50
      example:
        status: Completed
        monetary_amount: 75000
      additionalProperties: false
      x-graphql-type-name: OpportunitiesFilter
    OpportunitiesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Opportunities
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - title
            - win_probability
            - monetary_amount
            - status
          x-graphql-type-name: OpportunitiesSortBy
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      required:
        - by
      x-graphql-type-name: OpportunitiesSort
    Opportunity:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        title:
          type: string
          example: New Rocket
          minLength: 1
        primary_contact_id:
          type: string
          example: '12345'
          nullable: true
        description:
          type: string
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          minLength: 1
          nullable: true
        type:
          type: string
          example: Existing Customer - Upgrade
          minLength: 1
          nullable: true
        monetary_amount:
          type: number
          example: 75000
          nullable: true
        currency:
          type: string
          example: USD
          nullable: true
        win_probability:
          type: number
          example: 40
          nullable: true
        expected_revenue:
          description: Expected Revenue
          type: number
          example: 75000
          nullable: true
          readOnly: true
        close_date:
          type: string
          format: date
          example: '2020-10-30'
          nullable: true
        loss_reason_id:
          type: string
          example: '12345'
          nullable: true
        loss_reason:
          type: string
          example: No budget
          nullable: true
        won_reason_id:
          type: string
          example: '12345'
          nullable: true
        won_reason:
          type: string
          example: Best pitch
          nullable: true
        pipeline_id:
          type: string
          example: '12345'
          nullable: true
        pipeline_stage_id:
          type: string
          example: '12345'
          nullable: true
        source_id:
          type: string
          example: '12345'
          nullable: true
        lead_id:
          type: string
          example: '12345'
          nullable: true
        lead_source:
          description: Lead source
          type: string
          example: Website
          nullable: true
        contact_id:
          type: string
          example: '12345'
          nullable: true
        company_id:
          type: string
          example: '12345'
          nullable: true
        company_name:
          type: string
          example: Copper
          nullable: true
        owner_id:
          type: string
          example: '12345'
          nullable: true
        priority:
          type: string
          example: None
          minLength: 1
          nullable: true
        status:
          type: string
          example: Open
          minLength: 1
          nullable: true
        status_id:
          type: string
          example: '12345'
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
        interaction_count:
          type: number
          example: 0
          nullable: true
          readOnly: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        stage_last_changed_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
        last_activity_at:
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        deleted:
          type: boolean
          example: false
          readOnly: true
        date_stage_changed:
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        date_last_contacted:
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        date_lead_created:
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        updated_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        created_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
      additionalProperties: false
      required:
        - title
        - primary_contact_id
    PaymentRequired:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 402
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Payment Required
        typeName:
          description: The type of error returned
          type: string
          example: RequestLimitError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Request Limit Reached
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          type: string
          example: You have reached your limit of 2000
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#requestlimiterror'
    PhoneNumber:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        number:
          type: string
          example: 111-111-1111
          minLength: 1
        type:
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - home
            - office
            - mobile
            - assistant
            - fax
            - other
          x-graphql-type-name: PhoneType
      required:
        - number
    Pipeline:
      properties:
        id:
          type: string
          example: default
        name:
          type: string
          example: Sales Pipeline
          minLength: 1
        currency:
          type: string
          example: USD
        archived:
          type: boolean
          example: false
        display_order:
          type: integer
          example: 1
        stages:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: contractsent
                readOnly: true
              name:
                type: string
                example: Contract Sent
              value:
                type: string
                example: CONTRACT_SENT
              display_order:
                type: integer
                example: 1
        updated_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
      additionalProperties: false
      required:
        - name
      x-pii: []
    SocialLink:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        url:
          type: string
          example: 'https://www.twitter.com/apideck-io'
          minLength: 1
        type:
          type: string
          example: twitter
          nullable: true
      required:
        - url
    Tags:
      type: array
      items:
        type: string
      example:
        - New
    User:
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
        email:
          type: string
          format: email
          example: elon@musk.com
          minLength: 1
        parent_id:
          type: string
          example: '54321'
          nullable: true
        username:
          type: string
          example: masterofcoin
          nullable: true
        first_name:
          type: string
          example: Elon
          nullable: true
        last_name:
          type: string
          example: Musk
          nullable: true
        image:
          type: string
          example: 'https://logo.clearbit.com/spacex.com?s=128'
          nullable: true
        language:
          type: string
          example: EN
          nullable: true
        status:
          type: string
          example: active
          nullable: true
        password:
          type: string
          example: supersecretpassword
          writeOnly: true
        updated_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
        created_at:
          type: string
          example: '2017-08-12T20:43:21.291Z'
          readOnly: true
      required:
        - email
      x-pii:
        - username
        - first_name
        - last_name
        - email
    Unauthorized:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 401
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Unauthorized
        typeName:
          description: The type of error returned
          type: string
          example: UnauthorizedError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Unauthorized Request
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          type: string
          example: Failed to generate valid JWT Session. Verify applicationId is correct
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    UnexpectedError:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 400
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Bad Request
        typeName:
          description: The type of error returned
          type: string
          example: RequestHeadersValidationError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid Params
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              example:
                missing:
                  - x-apideck-consumer-id: required
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#unauthorizederror'
    UnifiedId:
      properties:
        id:
          type: string
          example: '12345'
          readOnly: true
      required:
        - id
      title: UnifiedId
    Unprocessable:
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 422
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Unprocessable Entity
        typeName:
          description: The type of error returned
          type: string
          example: InvalidStateError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid State
        detail:
          description: Contains parameter or domain specific information related to the error and why it occured.
          type: string
          example: State did not include unified_api
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#invalidstateerror'
    UpdateActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdatePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    Website:
      type: object
      properties:
        id:
          type: string
          example: '12345'
          nullable: true
        url:
          type: string
          example: 'http://example.com'
          minLength: 1
        type:
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          x-graphql-type-name: WebsiteType
      required:
        - url
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    CreateActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateActivityResponse'
    CreateCompany:
      description: Company created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCompanyResponse'
    CreateContact:
      description: Contact created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateContactResponse'
    CreateLead:
      description: Lead created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLeadResponse'
    CreateNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateNoteResponse'
    CreateOpportunity:
      description: Opportunity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOpportunityResponse'
    CreatePipeline:
      description: Pipeline created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePipelineResponse'
    CreateUser:
      description: User created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
    DeleteActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteActivityResponse'
    DeleteCompany:
      description: Company deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCompanyResponse'
    DeleteContact:
      description: Contact deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteContactResponse'
    DeleteLead:
      description: Lead deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteLeadResponse'
    DeleteNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteNoteResponse'
    DeleteOpportunity:
      description: Opportunity deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteOpportunityResponse'
    DeletePipeline:
      description: Pipeline deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePipelineResponse'
    DeleteUser:
      description: User deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteUserResponse'
    GetActivitiesResponse:
      description: Activities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivitiesResponse'
    GetActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivityResponse'
    GetCompanies:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompaniesResponse'
    GetCompany:
      description: Company
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompanyResponse'
    GetContact:
      description: Contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactResponse'
    GetContacts:
      description: Contacts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactsResponse'
    GetLead:
      description: Lead
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadResponse'
    GetLeads:
      description: Leads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadsResponse'
    GetNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNoteResponse'
    GetNotesResponse:
      description: Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotesResponse'
    GetOpportunities:
      description: Opportunities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunitiesResponse'
    GetOpportunity:
      description: Opportunity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunityResponse'
    GetPipeline:
      description: Pipeline
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelineResponse'
    GetPipelines:
      description: Pipelines
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelinesResponse'
    GetUsers:
      description: Users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUsersResponse'
    GetUser:
      description: User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserResponse'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotImplemented'
    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequired'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedError'
    Unprocessable:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unprocessable'
    UpdateActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateActivityResponse'
    UpdateCompany:
      description: Company updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCompanyResponse'
    UpdateContact:
      description: Contact updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContactResponse'
    UpdateLead:
      description: Lead updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLeadResponse'
    UpdateNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateNoteResponse'
    UpdateOpportunity:
      description: Opportunity updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOpportunityResponse'
    UpdatePipeline:
      description: Pipeline updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePipelineResponse'
    UpdateUser:
      description: User updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserResponse'
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. 
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header. 

        - Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`
        - Application id header: `x-apideck-app-id: <your-apideck-app-id>`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    applicationId:
      type: apiKey
      in: header
      name: x-apideck-app-id
      description: The ID of your Unify application
    consumerId:
      type: apiKey
      in: header
      name: x-apideck-consumer-id
      description: The ID of the consumer which you want to get or push data from
tags:
  - name: Leads
    description: ''
    x-apideck-model:
      $ref: '#/components/schemas/Lead'
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
security:
  - apiKey: []
    applicationId: []
    consumerId: []
