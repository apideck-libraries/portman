// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Portman should be runnable 1`] = `
Object {
  "_": Object {},
  "auth": Object {
    "bearer": Array [
      Object {
        "key": "token",
        "type": "any",
        "value": "{{bearerToken}}",
      },
    ],
    "type": "bearer",
  },
  "event": Array [
    Object {
      "listen": "prerequest",
      "script": Object {
        "exec": Array [
          "pm.collectionVariables.set('status', pm.iterationData.get('status') || 'open')",
        ],
        "type": "text/javascript",
      },
    },
  ],
  "item": Array [
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response time 
pm.test(\\"[GET]::/crm/companies - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/companies - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/companies - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"CompanyList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"name\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Copper\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"interaction_count\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":1,\\"readOnly\\":true},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"image_url\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://www.spacex.com/static/images/share.jpg\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"A crm that works for you, so you can spend time on relationships instead of data.\\",\\"default\\":\\"<string>\\"},\\"vat_number\\":{\\"description\\":\\"VAT number\\",\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"BE0689615164\\",\\"default\\":\\"<string>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Open\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"bank_accounts\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"iban\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CH2989144532982975332\\",\\"default\\":\\"<string>\\"},\\"bic\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"AUDSCHGGXXX\\",\\"default\\":\\"<string>\\"}}}},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/companies - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// Response body should have property \\"data[0].company_name\\"
pm.test(\\"[GET]::/crm/companies - Content check if property 'data[0].company_name' exists\\", function() {
   pm.expect((typeof jsonData.data[0].company_name !== \\"undefined\\")).to.be.true;
});
",
                      "// Response body should have value \\"Spacex\\" for \\"data[0].company_name\\"
if (jsonData?.data[0].company_name) {
pm.test(\\"[GET]::/crm/companies - Content check if value for 'data[0].company_name' matches 'Spacex'\\", function() {
  pm.expect(jsonData.data[0].company_name).to.eql(\\"Spacex\\");
})};
",
                      "pm.test('[GET] /crm/companies - Unify pagination limit', function(){pm.expect(pm.response.json().data.length).to.eql(3);});",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List companies",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List companies",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List companies",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "4",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[by]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[direction]",
                      "value": "asc",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/companies - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/companies - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/companies - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/companies - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/companies - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/companies/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/companies/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/companies/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"company\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"object\\",\\"required\\":[\\"name\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Copper\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"interaction_count\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":1,\\"readOnly\\":true},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"image_url\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://www.spacex.com/static/images/share.jpg\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"A crm that works for you, so you can spend time on relationships instead of data.\\",\\"default\\":\\"<string>\\"},\\"vat_number\\":{\\"description\\":\\"VAT number\\",\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"BE0689615164\\",\\"default\\":\\"<string>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Open\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"bank_accounts\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"iban\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CH2989144532982975332\\",\\"default\\":\\"<string>\\"},\\"bic\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"AUDSCHGGXXX\\",\\"default\\":\\"<string>\\"}}}},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/companies/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get company",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get company",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get company",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "companies",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/companies/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/companies/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/companies/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/companies/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update company",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"image_url\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"vat_number\\": \\"<string>\\",
  \\"currency\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"bank_accounts\\": [
    {
      \\"iban\\": \\"<string>\\",
      \\"bic\\": \\"<string>\\"
    },
    {
      \\"iban\\": \\"<string>\\",
      \\"bic\\": \\"<string>\\"
    }
  ],
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                    },
                    "description": Object {
                      "content": "Update company",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "portman-id-{{$randomInt}}",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update company",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "companies",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "string",
                          "value": "123456789",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/companies/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/companies/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/companies/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/companies/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete company",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete company",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete company",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "companies",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "companies",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/contacts - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/contacts - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/contacts - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/contacts - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"ContactList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"name\\"],\\"x-pii\\":[\\"name\\",\\"first_name\\",\\"middle_name\\",\\"last_name\\",\\"email\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Elon Musk\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"23456\\",\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"23456\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"34567\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"middle_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"D.\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"prefix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Mr.\\",\\"default\\":\\"<string>\\"},\\"suffix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"PhD\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CEO\\",\\"default\\":\\"<string>\\"},\\"department\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Engineering\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"description\\":\\"language code according to ISO 639-1. For the United States - EN\\",\\"default\\":\\"<string>\\"},\\"gender\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"enum\\":[\\"male\\",\\"female\\",\\"unisex\\"],\\"example\\":\\"female\\",\\"default\\":\\"<string>\\"},\\"birthday\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2000-08-12\\",\\"default\\":\\"<string>\\"},\\"image\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://logo.clearbit.com/spacex.com?s=128\\",\\"default\\":\\"<string>\\"},\\"lead_source\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Cold Call\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Internal champion\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"open\\",\\"default\\":\\"<string>\\"},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"additionalProperties\\":false,\\"type\\":\\"object\\"}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/contacts - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List contacts",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List contacts",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List contacts",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "contacts",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[first_name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[last_name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[email]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[by]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[direction]",
                      "value": "asc",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/contacts - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/contacts - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/contacts - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/contacts - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/contacts - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create contact",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"middle_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"prefix\\": \\"<string>\\",
  \\"suffix\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"department\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"gender\\": \\"<string>\\",
  \\"birthday\\": \\"<string>\\",
  \\"image\\": \\"<string>\\",
  \\"lead_source\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                },
                "description": Object {
                  "content": "Create contact",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create contact",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "contacts",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/contacts/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/contacts/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/contacts/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/contacts/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"required\\":[\\"name\\"],\\"x-pii\\":[\\"name\\",\\"first_name\\",\\"middle_name\\",\\"last_name\\",\\"email\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Elon Musk\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"23456\\",\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"23456\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"34567\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"middle_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"D.\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"prefix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Mr.\\",\\"default\\":\\"<string>\\"},\\"suffix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"PhD\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CEO\\",\\"default\\":\\"<string>\\"},\\"department\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Engineering\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"description\\":\\"language code according to ISO 639-1. For the United States - EN\\",\\"default\\":\\"<string>\\"},\\"gender\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"enum\\":[\\"male\\",\\"female\\",\\"unisex\\"],\\"example\\":\\"female\\",\\"default\\":\\"<string>\\"},\\"birthday\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2000-08-12\\",\\"default\\":\\"<string>\\"},\\"image\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://logo.clearbit.com/spacex.com?s=128\\",\\"default\\":\\"<string>\\"},\\"lead_source\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Cold Call\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Internal champion\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"open\\",\\"default\\":\\"<string>\\"},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"additionalProperties\\":false,\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/contacts/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get contact",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get contact",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get contact",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "contacts",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/contacts/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/contacts/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/contacts/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/contacts/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/contacts/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update contact",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"middle_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"prefix\\": \\"<string>\\",
  \\"suffix\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"department\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"gender\\": \\"<string>\\",
  \\"birthday\\": \\"<string>\\",
  \\"image\\": \\"<string>\\",
  \\"lead_source\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                    },
                    "description": Object {
                      "content": "Update contact",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update contact",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "contacts",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/contacts/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/contacts/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/contacts/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/contacts/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/contacts/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete contact",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete contact",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete contact",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "contacts",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "contacts",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/opportunities - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/opportunities - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/opportunities - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/opportunities - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"OpportunityList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"opportunities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"title\\",\\"primary_contact_id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"title\\":{\\"type\\":\\"string\\",\\"example\\":\\"New Rocket\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"primary_contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.\\",\\"default\\":\\"<string>\\"},\\"monetary_amount\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":75000,\\"default\\":\\"<number>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"win_probability\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":40,\\"default\\":\\"<number>\\"},\\"close_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-10-30\\",\\"format\\":\\"date\\",\\"default\\":\\"<date>\\"},\\"loss_reason_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"loss_reason\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"No budget\\",\\"default\\":\\"<string>\\"},\\"won_reason_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"won_reason\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Best pitch\\",\\"default\\":\\"<string>\\"},\\"pipeline_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"pipeline_stage_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"source_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Copper\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"priority\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"None\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Open\\",\\"default\\":\\"<string>\\"},\\"status_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"interaction_count\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":0,\\"readOnly\\":true},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"date_stage_changed\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"date_last_contacted\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"date_lead_created\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true}}}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/opportunities - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List opportunities",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List opportunities",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List opportunities",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "opportunities",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[title]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[status]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[monetary_amount]",
                      "value": "<number>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[win_probability]",
                      "value": "<number>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[by]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[direction]",
                      "value": "asc",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/opportunities - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/opportunities - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/opportunities - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/opportunities - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"opportunities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/opportunities - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create opportunity",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"title\\": \\"<string>\\",
  \\"primary_contact_id\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"monetary_amount\\": \\"<number>\\",
  \\"currency\\": \\"<string>\\",
  \\"win_probability\\": \\"<number>\\",
  \\"close_date\\": \\"<date>\\",
  \\"loss_reason_id\\": \\"<string>\\",
  \\"loss_reason\\": \\"<string>\\",
  \\"won_reason_id\\": \\"<string>\\",
  \\"won_reason\\": \\"<string>\\",
  \\"pipeline_id\\": \\"<string>\\",
  \\"pipeline_stage_id\\": \\"<string>\\",
  \\"source_id\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"priority\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"status_id\\": \\"<string>\\",
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ]
}",
                },
                "description": Object {
                  "content": "Create opportunity",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create opportunity",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "opportunities",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/opportunities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/opportunities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/opportunities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/opportunities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"opportunities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"object\\",\\"required\\":[\\"title\\",\\"primary_contact_id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"title\\":{\\"type\\":\\"string\\",\\"example\\":\\"New Rocket\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"primary_contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.\\",\\"default\\":\\"<string>\\"},\\"monetary_amount\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":75000,\\"default\\":\\"<number>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"win_probability\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":40,\\"default\\":\\"<number>\\"},\\"close_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-10-30\\",\\"format\\":\\"date\\",\\"default\\":\\"<date>\\"},\\"loss_reason_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"loss_reason\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"No budget\\",\\"default\\":\\"<string>\\"},\\"won_reason_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"won_reason\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Best pitch\\",\\"default\\":\\"<string>\\"},\\"pipeline_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"pipeline_stage_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"source_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Copper\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"priority\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"None\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"minLength\\":1,\\"example\\":\\"Open\\",\\"default\\":\\"<string>\\"},\\"status_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"interaction_count\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":0,\\"readOnly\\":true},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"date_stage_changed\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"date_last_contacted\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"date_lead_created\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2020-09-30T00:00:00.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"format\\":\\"date-time\\",\\"readOnly\\":true}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/opportunities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get opportunity",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get opportunity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get opportunity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "opportunities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/opportunities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/opportunities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/opportunities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/opportunities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/opportunities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update opportunity",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"title\\": \\"<string>\\",
  \\"primary_contact_id\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"monetary_amount\\": \\"<number>\\",
  \\"currency\\": \\"<string>\\",
  \\"win_probability\\": \\"<number>\\",
  \\"close_date\\": \\"<date>\\",
  \\"loss_reason_id\\": \\"<string>\\",
  \\"loss_reason\\": \\"<string>\\",
  \\"won_reason_id\\": \\"<string>\\",
  \\"won_reason\\": \\"<string>\\",
  \\"pipeline_id\\": \\"<string>\\",
  \\"pipeline_stage_id\\": \\"<string>\\",
  \\"source_id\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"priority\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"status_id\\": \\"<string>\\",
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ]
}",
                    },
                    "description": Object {
                      "content": "Update opportunity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update opportunity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "opportunities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/opportunities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/opportunities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/opportunities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/opportunities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/opportunities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete opportunity",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete opportunity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete opportunity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "opportunities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "opportunities",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/leads - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/leads - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/leads - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/leads - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"LeadList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"name\\",\\"company_name\\"],\\"x-pii\\":[\\"name\\",\\"email\\",\\"first_name\\",\\"last_name\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Elon Musk\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Spacex\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2\\",\\"default\\":\\"<string>\\"},\\"lead_source\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Cold Call\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"A thinker\\",\\"default\\":\\"<string>\\"},\\"prefix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Sir\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CEO\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"description\\":\\"language code according to ISO 639-1. For the United States - EN\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"New\\",\\"default\\":\\"<string>\\"},\\"monetary_amount\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":75000,\\"default\\":\\"<number>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}},\\"type\\":\\"object\\"}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/leads - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List leads",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List leads",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List leads",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "leads",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[first_name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[last_name]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply filters (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "filter[email]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[by]",
                      "value": "<string>",
                    },
                    Object {
                      "description": Object {
                        "content": "Apply sorting (beta)",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "sort[direction]",
                      "value": "asc",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/leads - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/leads - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/leads - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/leads - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/leads - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                      "// pm.collectionVariables - Set leadsAdd.company_name as variable from request body 
pm.collectionVariables.set(\\"leadsAdd.company_name\\", \\"<string>\\");
console.log(\\"- use {{leadsAdd.company_name}} as collection variable for value\\", \\"<string>\\");
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create lead",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"name\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"lead_source\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"prefix\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"monetary_amount\\": \\"<number>\\",
  \\"currency\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                },
                "description": Object {
                  "content": "Create lead",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create lead",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "leads",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/leads/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/leads/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/leads/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/leads/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"required\\":[\\"name\\",\\"company_name\\"],\\"x-pii\\":[\\"name\\",\\"email\\",\\"first_name\\",\\"last_name\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Elon Musk\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"company_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Spacex\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2\\",\\"default\\":\\"<string>\\"},\\"lead_source\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Cold Call\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"A thinker\\",\\"default\\":\\"<string>\\"},\\"prefix\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Sir\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CEO\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"description\\":\\"language code according to ISO 639-1. For the United States - EN\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"New\\",\\"default\\":\\"<string>\\"},\\"monetary_amount\\":{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":75000,\\"default\\":\\"<number>\\"},\\"currency\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"fax\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"+12129876543\\",\\"default\\":\\"<string>\\"},\\"websites\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"url\\"],\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"http://example.com\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"WebsiteType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"addresses\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"AddressType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"shipping\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"HQ US\\",\\"default\\":\\"<string>\\"},\\"line1\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Main street\\",\\"description\\":\\"Line 1 of the address e.g. number, street, suite, apt #, etc.\\",\\"default\\":\\"<string>\\"},\\"line2\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"apt #\\",\\"description\\":\\"Line 2 of the address\\",\\"default\\":\\"<string>\\"},\\"city\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"San Francisco\\",\\"description\\":\\"Name of city.\\",\\"default\\":\\"<string>\\"},\\"state\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"CA\\",\\"description\\":\\"Name of state\\",\\"default\\":\\"<string>\\"},\\"postal_code\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"94104\\",\\"description\\":\\"Zip code or equivalent.\\",\\"default\\":\\"<string>\\"},\\"country\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"US\\",\\"description\\":\\"country code according to ISO 3166-1 alpha-2.\\",\\"default\\":\\"<string>\\"},\\"latitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"40.759211\\",\\"default\\":\\"<string>\\"},\\"longitude\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"-73.984638\\",\\"default\\":\\"<string>\\"}}}},\\"social_links\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"url\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"url\\":{\\"type\\":\\"string\\",\\"example\\":\\"https://www.twitter.com/apideck-io\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"twitter\\",\\"default\\":\\"<string>\\"}}}},\\"phone_numbers\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"number\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"number\\":{\\"type\\":\\"string\\",\\"example\\":\\"111-111-1111\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"PhoneType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"home\\",\\"office\\",\\"mobile\\",\\"assistant\\",\\"fax\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"emails\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"123\\",\\"default\\":\\"<string>\\"},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"x-graphql-type-name\\":\\"EmailType\\",\\"enum\\":[\\"primary\\",\\"secondary\\",\\"work\\",\\"personal\\",\\"billing\\",\\"other\\"],\\"example\\":\\"primary\\",\\"default\\":\\"<string>\\"}}}},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"tags\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\",\\"default\\":\\"<string>\\"},\\"example\\":[\\"New\\"]},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/leads/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                          "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                          "// pm.collectionVariables - Set leadsOne.data.company_name as variable for jsonData.data.company_name
if (jsonData?.data?.company_name) {
   pm.collectionVariables.set(\\"leadsOne.data.company_name\\", jsonData.data.company_name);
   console.log(\\"- use {{leadsOne.data.company_name}} as collection variable for value\\",jsonData.data.company_name);
} else {
   console.log('INFO - Unable to assign variable {{leadsOne.data.company_name}}, as jsonData.data.company_name is undefined.');
};
",
                          "",
                          "// pm.collectionVariables - Set leadsOne.Operation-Location as variable for header 
let leadsOneOperationLocation = pm.response.headers.get(\\"Operation-Location\\");
if (leadsOneOperationLocation !== undefined) {
   pm.collectionVariables.set(\\"leadsOne.Operation-Location\\", leadsOneOperationLocation);
   console.log(\\"- use {{leadsOne.Operation-Location}} as collection variable for value\\", leadsOneOperationLocation);
};
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get lead",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get lead",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get lead",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "leads",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/leads/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/leads/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/leads/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/leads/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/leads/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update lead",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"name\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"lead_source\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"prefix\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"monetary_amount\\": \\"<number>\\",
  \\"currency\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                    },
                    "description": Object {
                      "content": "Update lead",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update lead",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "leads",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/leads/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/leads/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/leads/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/leads/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/leads/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete lead",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete lead",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete lead",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "leads",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "leads",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/pipelines - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/pipelines - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/pipelines - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/pipelines - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"PipelinesList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"pipelines\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"name\\"],\\"x-pii\\":[],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"default\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Sales Pipeline\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"currency\\":{\\"type\\":\\"string\\",\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"archived\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"display_order\\":{\\"type\\":\\"integer\\",\\"example\\":1,\\"default\\":\\"<integer>\\"},\\"stages\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"contractsent\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Contract Sent\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"type\\":\\"string\\",\\"example\\":\\"CONTRACT_SENT\\",\\"default\\":\\"<string>\\"},\\"display_order\\":{\\"type\\":\\"integer\\",\\"example\\":1,\\"default\\":\\"<integer>\\"}}}},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"additionalProperties\\":false,\\"type\\":\\"object\\"}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/pipelines - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List pipelines",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List pipelines",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List pipelines",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "pipelines",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/pipelines - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/pipelines - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/pipelines - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/pipelines - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"pipelines\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/pipelines - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create pipeline",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"name\\": \\"<string>\\",
  \\"id\\": \\"<string>\\",
  \\"currency\\": \\"<string>\\",
  \\"archived\\": \\"<boolean>\\",
  \\"display_order\\": \\"<integer>\\",
  \\"stages\\": [
    {
      \\"name\\": \\"<string>\\",
      \\"value\\": \\"<string>\\",
      \\"display_order\\": \\"<integer>\\"
    },
    {
      \\"name\\": \\"<string>\\",
      \\"value\\": \\"<string>\\",
      \\"display_order\\": \\"<integer>\\"
    }
  ]
}",
                },
                "description": Object {
                  "content": "Create pipeline",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create pipeline",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "pipelines",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/pipelines/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/pipelines/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/pipelines/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/pipelines/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"pipelines\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"required\\":[\\"name\\"],\\"x-pii\\":[],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"default\\",\\"default\\":\\"<string>\\"},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Sales Pipeline\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"currency\\":{\\"type\\":\\"string\\",\\"example\\":\\"USD\\",\\"default\\":\\"<string>\\"},\\"archived\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"display_order\\":{\\"type\\":\\"integer\\",\\"example\\":1,\\"default\\":\\"<integer>\\"},\\"stages\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"contractsent\\",\\"readOnly\\":true},\\"name\\":{\\"type\\":\\"string\\",\\"example\\":\\"Contract Sent\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"type\\":\\"string\\",\\"example\\":\\"CONTRACT_SENT\\",\\"default\\":\\"<string>\\"},\\"display_order\\":{\\"type\\":\\"integer\\",\\"example\\":1,\\"default\\":\\"<integer>\\"}}}},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"additionalProperties\\":false,\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/pipelines/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get pipeline",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get pipeline",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get pipeline",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "pipelines",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/pipelines/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/pipelines/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/pipelines/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/pipelines/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"pipelines\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/pipelines/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update pipeline",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"name\\": \\"<string>\\",
  \\"id\\": \\"<string>\\",
  \\"currency\\": \\"<string>\\",
  \\"archived\\": \\"<boolean>\\",
  \\"display_order\\": \\"<integer>\\",
  \\"stages\\": [
    {
      \\"name\\": \\"<string>\\",
      \\"value\\": \\"<string>\\",
      \\"display_order\\": \\"<integer>\\"
    },
    {
      \\"name\\": \\"<string>\\",
      \\"value\\": \\"<string>\\",
      \\"display_order\\": \\"<integer>\\"
    }
  ]
}",
                    },
                    "description": Object {
                      "content": "Update pipeline",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update pipeline",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "pipelines",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/pipelines/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/pipelines/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/pipelines/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/pipelines/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/pipelines/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete pipeline",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete pipeline",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete pipeline",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "pipelines",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "pipelines",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/notes - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/notes - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/notes - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/notes - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"NoteList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"notes\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"title\\":{\\"type\\":\\"string\\",\\"example\\":\\"Meeting Notes\\",\\"default\\":\\"<string>\\"},\\"content\\":{\\"type\\":\\"string\\",\\"example\\":\\"Office hours are 9AM-6PM\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/notes - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List notes",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List notes",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List notes",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "notes",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/notes - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/notes - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/notes - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/notes - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"notes\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/notes - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create note",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"title\\": \\"<string>\\",
  \\"content\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\"
}",
                },
                "description": Object {
                  "content": "Create note",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create note",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "notes",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/notes/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/notes/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/notes/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/notes/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"note\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"notes\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"title\\":{\\"type\\":\\"string\\",\\"example\\":\\"Meeting Notes\\",\\"default\\":\\"<string>\\"},\\"content\\":{\\"type\\":\\"string\\",\\"example\\":\\"Office hours are 9AM-6PM\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/notes/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get note",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get note",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get note",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "notes",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/notes/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/notes/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/notes/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/notes/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"notes\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/notes/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update note",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"title\\": \\"<string>\\",
  \\"content\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\"
}",
                    },
                    "description": Object {
                      "content": "Update note",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update note",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "notes",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/notes/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/notes/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/notes/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/notes/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"notes\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/notes/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete note",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete note",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete note",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "notes",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "notes",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/users - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/users - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/users - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/users - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"UserList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"users\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"required\\":[\\"email\\"],\\"x-pii\\":[\\"username\\",\\"first_name\\",\\"last_name\\",\\"email\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"parent_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"username\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"masterofcoin\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"image\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://logo.clearbit.com/spacex.com?s=128\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"active\\",\\"default\\":\\"<string>\\"},\\"password\\":{\\"type\\":\\"string\\",\\"example\\":\\"supersecretpassword\\",\\"writeOnly\\":true,\\"default\\":\\"<string>\\"},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"type\\":\\"object\\"}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/users - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List users",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List users",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List users",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "users",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/users - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/users - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/users - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/users - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"users\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/users - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create user",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"email\\": \\"<email>\\",
  \\"parent_id\\": \\"<string>\\",
  \\"username\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"image\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"password\\": \\"<string>\\"
}",
                },
                "description": Object {
                  "content": "Create user",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create user",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "users",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/users/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/users/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/users/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/users/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"required\\":[\\"email\\"],\\"x-pii\\":[\\"username\\",\\"first_name\\",\\"last_name\\",\\"email\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"email\\":{\\"type\\":\\"string\\",\\"format\\":\\"email\\",\\"example\\":\\"elon@musk.com\\",\\"minLength\\":1,\\"default\\":\\"<email>\\"},\\"parent_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"54321\\",\\"default\\":\\"<string>\\"},\\"username\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"masterofcoin\\",\\"default\\":\\"<string>\\"},\\"first_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Elon\\",\\"default\\":\\"<string>\\"},\\"last_name\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Musk\\",\\"default\\":\\"<string>\\"},\\"image\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"https://logo.clearbit.com/spacex.com?s=128\\",\\"default\\":\\"<string>\\"},\\"language\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"EN\\",\\"default\\":\\"<string>\\"},\\"status\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"active\\",\\"default\\":\\"<string>\\"},\\"password\\":{\\"type\\":\\"string\\",\\"example\\":\\"supersecretpassword\\",\\"writeOnly\\":true,\\"default\\":\\"<string>\\"},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2017-08-12T20:43:21.291Z\\",\\"readOnly\\":true}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/users/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get user",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get user",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get user",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "users",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/users/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/users/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/users/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/users/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"companies\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/users/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update user",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"email\\": \\"<email>\\",
  \\"parent_id\\": \\"<string>\\",
  \\"username\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"image\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"password\\": \\"<string>\\"
}",
                    },
                    "description": Object {
                      "content": "Update user",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update user",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "users",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/users/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/users/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/users/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/users/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"users\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/users/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete user",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete user",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete user",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "users",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "users",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/activities - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[GET]::/crm/activities - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/activities - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/activities - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"ActivityList\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"activities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":false,\\"required\\":[\\"type\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"activity_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:00:00.000Z\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"duration_seconds\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":1800,\\"minimum\\":0,\\"default\\":\\"<integer>\\"},\\"account_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"opportunity_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"campaign_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"case_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"asset_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contract_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"product_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"solution_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"custom_object_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"enum\\":[\\"call\\",\\"meeting\\",\\"email\\",\\"note\\",\\"task\\",\\"send-letter\\",\\"send-quote\\",\\"other\\"],\\"example\\":\\"meeting\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Meeting\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"More info about the meeting\\",\\"default\\":\\"<string>\\"},\\"location\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Space\\",\\"default\\":\\"<string>\\"},\\"all_day_event\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"private\\":{\\"type\\":\\"boolean\\",\\"example\\":true,\\"default\\":\\"<boolean>\\"},\\"group_event\\":{\\"type\\":\\"boolean\\",\\"example\\":true,\\"default\\":\\"<boolean>\\"},\\"event_sub_type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"debrief\\",\\"default\\":\\"<string>\\"},\\"group_event_type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Proposed\\",\\"default\\":\\"<string>\\"},\\"child\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"archived\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"deleted\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"show_as\\":{\\"type\\":\\"string\\",\\"enum\\":[\\"free\\",\\"busy\\"],\\"example\\":\\"busy\\",\\"default\\":\\"<string>\\"},\\"activity_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01\\",\\"default\\":\\"<string>\\"},\\"duration_minutes\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":30,\\"default\\":\\"<integer>\\"},\\"start_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:00:00.000Z\\",\\"default\\":\\"<string>\\"},\\"end_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:30:00.000Z\\",\\"default\\":\\"<string>\\"},\\"end_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01\\",\\"default\\":\\"<string>\\"},\\"recurrent\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"reminder_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T17:00:00.000Z\\",\\"default\\":\\"<string>\\"},\\"reminder_set\\":{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}},\\"meta\\":{\\"type\\":\\"object\\",\\"description\\":\\"Reponse metadata\\",\\"properties\\":{\\"items_on_page\\":{\\"type\\":\\"integer\\",\\"description\\":\\"Number of items returned in the data property of the response\\",\\"example\\":50},\\"cursors\\":{\\"type\\":\\"object\\",\\"description\\":\\"Cursors to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the previous page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjE=\\"},\\"current\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the current page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjI=\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Cursor to navigate to the next page of results through the API\\",\\"example\\":\\"em9oby1jcm06OnBhZ2U6OjM=\\"}}}}},\\"links\\":{\\"type\\":\\"object\\",\\"description\\":\\"Links to navigate to previous or next pages through the API\\",\\"properties\\":{\\"previous\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\\"},\\"current\\":{\\"type\\":\\"string\\",\\"description\\":\\"Link to navigate to the current page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies\\"},\\"next\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"description\\":\\"Link to navigate to the previous page through the API\\",\\"example\\":\\"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\\"}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/activities - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List activities",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "List activities",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List activities",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "activities",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                    Object {
                      "description": Object {
                        "content": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "cursor",
                      "value": "",
                    },
                    Object {
                      "description": Object {
                        "content": "Number of records to return",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "limit",
                      "value": "20",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[POST]::/crm/activities - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Validate response time 
pm.test(\\"[POST]::/crm/activities - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                      "// Validate if response header has matching content-type
pm.test(\\"[POST]::/crm/activities - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                      "// Validate if response has JSON Body 
pm.test(\\"[POST]::/crm/activities - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                      "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"activities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[POST]::/crm/activities - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set leadsAdd.id as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"leadsAdd.id\\", jsonData.data.id);
   console.log(\\"- use {{leadsAdd.id}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{leadsAdd.id}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create activity",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"type\\": \\"<string>\\",
  \\"activity_datetime\\": \\"<string>\\",
  \\"duration_seconds\\": \\"<integer>\\",
  \\"account_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"opportunity_id\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"campaign_id\\": \\"<string>\\",
  \\"case_id\\": \\"<string>\\",
  \\"asset_id\\": \\"<string>\\",
  \\"contract_id\\": \\"<string>\\",
  \\"product_id\\": \\"<string>\\",
  \\"solution_id\\": \\"<string>\\",
  \\"custom_object_id\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"location\\": \\"<string>\\",
  \\"all_day_event\\": \\"<boolean>\\",
  \\"private\\": \\"<boolean>\\",
  \\"group_event\\": \\"<boolean>\\",
  \\"event_sub_type\\": \\"<string>\\",
  \\"group_event_type\\": \\"<string>\\",
  \\"child\\": \\"<boolean>\\",
  \\"archived\\": \\"<boolean>\\",
  \\"deleted\\": \\"<boolean>\\",
  \\"show_as\\": \\"<string>\\",
  \\"activity_date\\": \\"<string>\\",
  \\"duration_minutes\\": \\"<integer>\\",
  \\"start_datetime\\": \\"<string>\\",
  \\"end_datetime\\": \\"<string>\\",
  \\"end_date\\": \\"<string>\\",
  \\"recurrent\\": \\"<boolean>\\",
  \\"reminder_datetime\\": \\"<string>\\",
  \\"reminder_set\\": \\"<boolean>\\",
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ]
}",
                },
                "description": Object {
                  "content": "Create activity",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create activity",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "activities",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [],
              "item": Array [
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[GET]::/crm/activities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[GET]::/crm/activities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[GET]::/crm/activities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[GET]::/crm/activities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"x-graphql-type-name\\":\\"activity\\",\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"activities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":false,\\"required\\":[\\"type\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"},\\"activity_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:00:00.000Z\\",\\"minLength\\":1,\\"default\\":\\"<string>\\"},\\"duration_seconds\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":1800,\\"minimum\\":0,\\"default\\":\\"<integer>\\"},\\"account_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contact_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"company_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"opportunity_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"lead_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"owner_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"campaign_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"case_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"asset_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"contract_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"product_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"solution_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"custom_object_id\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"default\\":\\"<string>\\"},\\"type\\":{\\"type\\":\\"string\\",\\"enum\\":[\\"call\\",\\"meeting\\",\\"email\\",\\"note\\",\\"task\\",\\"send-letter\\",\\"send-quote\\",\\"other\\"],\\"example\\":\\"meeting\\",\\"default\\":\\"<string>\\"},\\"title\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Meeting\\",\\"default\\":\\"<string>\\"},\\"description\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"More info about the meeting\\",\\"default\\":\\"<string>\\"},\\"location\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Space\\",\\"default\\":\\"<string>\\"},\\"all_day_event\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"private\\":{\\"type\\":\\"boolean\\",\\"example\\":true,\\"default\\":\\"<boolean>\\"},\\"group_event\\":{\\"type\\":\\"boolean\\",\\"example\\":true,\\"default\\":\\"<boolean>\\"},\\"event_sub_type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"debrief\\",\\"default\\":\\"<string>\\"},\\"group_event_type\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Proposed\\",\\"default\\":\\"<string>\\"},\\"child\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"archived\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"deleted\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"show_as\\":{\\"type\\":\\"string\\",\\"enum\\":[\\"free\\",\\"busy\\"],\\"example\\":\\"busy\\",\\"default\\":\\"<string>\\"},\\"activity_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01\\",\\"default\\":\\"<string>\\"},\\"duration_minutes\\":{\\"type\\":[\\"integer\\",\\"null\\"],\\"example\\":30,\\"default\\":\\"<integer>\\"},\\"start_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:00:00.000Z\\",\\"default\\":\\"<string>\\"},\\"end_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T12:30:00.000Z\\",\\"default\\":\\"<string>\\"},\\"end_date\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01\\",\\"default\\":\\"<string>\\"},\\"recurrent\\":{\\"type\\":\\"boolean\\",\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"reminder_datetime\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"2021-05-01T17:00:00.000Z\\",\\"default\\":\\"<string>\\"},\\"reminder_set\\":{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":false,\\"default\\":\\"<boolean>\\"},\\"custom_fields\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"object\\",\\"required\\":[\\"id\\"],\\"additionalProperties\\":false,\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"example\\":\\"custom_technologies\\",\\"default\\":\\"<string>\\"},\\"value\\":{\\"anyOf\\":[{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"Uses Salesforce and Marketo\\",\\"default\\":\\"<string>\\"},{\\"type\\":[\\"number\\",\\"null\\"],\\"example\\":10},{\\"type\\":[\\"boolean\\",\\"null\\"],\\"example\\":true},{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"}}]}}}},\\"updated_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"created_by\\":{\\"type\\":[\\"string\\",\\"null\\"],\\"example\\":\\"12345\\",\\"readOnly\\":true},\\"updated_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true},\\"created_at\\":{\\"type\\":\\"string\\",\\"example\\":\\"2020-09-30T07:43:32.000Z\\",\\"readOnly\\":true}}}}}

// Validate if response matches JSON schema 
pm.test(\\"[GET]::/crm/activities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Get activity",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Get activity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "GET",
                    "name": "Get activity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "activities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/activities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[PATCH]::/crm/activities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[PATCH]::/crm/activities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[PATCH]::/crm/activities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"activities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[PATCH]::/crm/activities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Update activity",
                  "protocolProfileBehavior": Object {
                    "disableBodyPruning": true,
                  },
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "body": Object {
                      "mode": "raw",
                      "options": Object {
                        "raw": Object {
                          "language": "json",
                        },
                      },
                      "raw": "{
  \\"type\\": \\"<string>\\",
  \\"activity_datetime\\": \\"<string>\\",
  \\"duration_seconds\\": \\"<integer>\\",
  \\"account_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"opportunity_id\\": \\"<string>\\",
  \\"lead_id\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"campaign_id\\": \\"<string>\\",
  \\"case_id\\": \\"<string>\\",
  \\"asset_id\\": \\"<string>\\",
  \\"contract_id\\": \\"<string>\\",
  \\"product_id\\": \\"<string>\\",
  \\"solution_id\\": \\"<string>\\",
  \\"custom_object_id\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"location\\": \\"<string>\\",
  \\"all_day_event\\": \\"<boolean>\\",
  \\"private\\": \\"<boolean>\\",
  \\"group_event\\": \\"<boolean>\\",
  \\"event_sub_type\\": \\"<string>\\",
  \\"group_event_type\\": \\"<string>\\",
  \\"child\\": \\"<boolean>\\",
  \\"archived\\": \\"<boolean>\\",
  \\"deleted\\": \\"<boolean>\\",
  \\"show_as\\": \\"<string>\\",
  \\"activity_date\\": \\"<string>\\",
  \\"duration_minutes\\": \\"<integer>\\",
  \\"start_datetime\\": \\"<string>\\",
  \\"end_datetime\\": \\"<string>\\",
  \\"end_date\\": \\"<string>\\",
  \\"recurrent\\": \\"<boolean>\\",
  \\"reminder_datetime\\": \\"<string>\\",
  \\"reminder_set\\": \\"<boolean>\\",
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ]
}",
                    },
                    "description": Object {
                      "content": "Update activity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Content-Type",
                        "value": "application/json",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "PATCH",
                    "name": "Update activity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "activities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
                Object {
                  "event": Array [
                    Object {
                      "listen": "test",
                      "script": Object {
                        "exec": Array [
                          "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/activities/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                          "// Validate response time 
pm.test(\\"[DELETE]::/crm/activities/:id - Response time is less than 300ms\\", function () {
    pm.expect(pm.response.responseTime).to.be.below(300);
});
",
                          "// Validate if response header has matching content-type
pm.test(\\"[DELETE]::/crm/activities/:id - Content-Type is application/json\\", function () {
   pm.expect(pm.response.headers.get(\\"Content-Type\\")).to.include(\\"application/json\\");
});
",
                          "// Validate if response has JSON Body 
pm.test(\\"[DELETE]::/crm/activities/:id - Response has JSON Body\\", function () {
    pm.response.to.have.jsonBody();
});
",
                          "// Response Validation
const schema = {\\"type\\":\\"object\\",\\"required\\":[\\"status_code\\",\\"status\\",\\"service\\",\\"resource\\",\\"operation\\",\\"data\\"],\\"properties\\":{\\"status_code\\":{\\"type\\":\\"integer\\",\\"description\\":\\"HTTP Response Status Code\\",\\"example\\":200},\\"status\\":{\\"type\\":\\"string\\",\\"description\\":\\"HTTP Response Status\\",\\"example\\":\\"OK\\"},\\"service\\":{\\"type\\":\\"string\\",\\"description\\":\\"Apideck ID of service provider\\",\\"example\\":\\"zoho-crm\\"},\\"resource\\":{\\"type\\":\\"string\\",\\"description\\":\\"Unified API resource name\\",\\"example\\":\\"activities\\"},\\"operation\\":{\\"type\\":\\"string\\",\\"description\\":\\"Operation performed\\",\\"example\\":\\"one\\"},\\"data\\":{\\"title\\":\\"UnifiedId\\",\\"required\\":[\\"id\\"],\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\",\\"readOnly\\":true,\\"example\\":\\"12345\\"}},\\"type\\":\\"object\\"}}}

// Validate if response matches JSON schema 
pm.test(\\"[DELETE]::/crm/activities/:id - Schema is valid\\", function() {
    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\\"int32\\", \\"int64\\", \\"float\\"]});
});
",
                        ],
                        "type": "text/javascript",
                      },
                    },
                  ],
                  "name": "Delete activity",
                  "request": Object {
                    "auth": Object {
                      "bearer": Array [
                        Object {
                          "key": "token",
                          "type": "any",
                          "value": "{{bearerToken}}",
                        },
                      ],
                      "type": "bearer",
                    },
                    "description": Object {
                      "content": "Delete activity",
                      "type": "text/plain",
                    },
                    "header": Array [
                      Object {
                        "description": Object {
                          "content": "(Required) ID of the consumer which you want to get or push data from",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-consumer-id",
                        "value": "<string>",
                      },
                      Object {
                        "description": Object {
                          "content": "(Required) The ID of your Unify ApiDeck application",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-app-id",
                        "value": "{{applicationId}}",
                      },
                      Object {
                        "description": Object {
                          "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                          "type": "text/plain",
                        },
                        "disabled": false,
                        "key": "x-apideck-service-id",
                        "value": "<string>",
                      },
                      Object {
                        "key": "Accept",
                        "value": "application/json",
                      },
                    ],
                    "method": "DELETE",
                    "name": "Delete activity",
                    "url": Object {
                      "host": Array [
                        "{{baseUrl}}",
                      ],
                      "path": Array [
                        "crm",
                        "activities",
                        ":id",
                      ],
                      "query": Array [
                        Object {
                          "description": Object {
                            "content": "Include raw response. Mostly used for debugging purposes",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "raw",
                          "value": "true",
                        },
                      ],
                      "variable": Array [
                        Object {
                          "description": Object {
                            "content": "(Required) ID of the record you are acting upon.",
                            "type": "text/plain",
                          },
                          "disabled": false,
                          "key": "id",
                          "type": "any",
                          "value": "<string>",
                        },
                      ],
                    },
                  },
                  "response": Array [],
                },
              ],
              "name": "{id}",
            },
          ],
          "name": "activities",
        },
      ],
      "name": "crm",
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [],
              "name": "Create lead[InvalidAuth]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "not_a_real_token",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
  \\"name\\": \\"<string>\\",
  \\"company_name\\": \\"<string>\\",
  \\"owner_id\\": \\"<string>\\",
  \\"company_id\\": \\"<string>\\",
  \\"contact_id\\": \\"<string>\\",
  \\"lead_source\\": \\"<string>\\",
  \\"first_name\\": \\"<string>\\",
  \\"last_name\\": \\"<string>\\",
  \\"description\\": \\"<string>\\",
  \\"prefix\\": \\"<string>\\",
  \\"title\\": \\"<string>\\",
  \\"language\\": \\"<string>\\",
  \\"status\\": \\"<string>\\",
  \\"monetary_amount\\": \\"<number>\\",
  \\"currency\\": \\"<string>\\",
  \\"fax\\": \\"<string>\\",
  \\"websites\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"addresses\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\",
      \\"name\\": \\"<string>\\",
      \\"line1\\": \\"<string>\\",
      \\"line2\\": \\"<string>\\",
      \\"city\\": \\"<string>\\",
      \\"state\\": \\"<string>\\",
      \\"postal_code\\": \\"<string>\\",
      \\"country\\": \\"<string>\\",
      \\"latitude\\": \\"<string>\\",
      \\"longitude\\": \\"<string>\\"
    }
  ],
  \\"social_links\\": [
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"url\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"phone_numbers\\": [
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"number\\": \\"<string>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"emails\\": [
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    },
    {
      \\"email\\": \\"<email>\\",
      \\"id\\": \\"<string>\\",
      \\"type\\": \\"<string>\\"
    }
  ],
  \\"custom_fields\\": [
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    },
    {
      \\"id\\": \\"<string>\\",
      \\"value\\": \\"<string>\\"
    }
  ],
  \\"tags\\": [
    \\"<string>\\",
    \\"<string>\\"
  ]
}",
                },
                "description": Object {
                  "content": "Create lead",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create lead[InvalidAuth]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "leads",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "leads Variations",
        },
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required name]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required name]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required websites[0].url]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required websites[0].url]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required social_links[0].url]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required social_links[0].url]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required phone_numbers[0].number]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required phone_numbers[0].number]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required emails[0].email]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required emails[0].email]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required custom_fields[0].id]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required custom_fields[0].id]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length name]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length name]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length status]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length status]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length websites[0].url]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length websites[0].url]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length social_links[0].url]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length social_links[0].url]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length phone_numbers[0].number]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length phone_numbers[0].number]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][minimum length emails[0].email]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][minimum length emails[0].email]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required x-apideck-consumer-id]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required x-apideck-consumer-id]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 422\\", function () {
    pm.expect(pm.response.code).to.equal(422);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create company[Unprocessable][required x-apideck-app-id]",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Foo Inc. --{{$randomInt}}\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create company[Unprocessable][required x-apideck-app-id]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "companies Variations",
        },
      ],
      "name": "Variation Tests",
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// pm.collectionVariables - Set companyId as variable for jsonData.data.id
if (jsonData?.data?.id) {
   pm.collectionVariables.set(\\"companyId\\", jsonData.data.id);
   console.log(\\"- use {{companyId}} as collection variable for value\\",jsonData.data.id);
} else {
   console.log('INFO - Unable to assign variable {{companyId}}, as jsonData.data.id is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
                Object {
                  "listen": "prerequest",
                  "script": Object {
                    "exec": Array [
                      "pm.collectionVariables.set('integrationCompanyBody', request.data);",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create Company",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Integration Test: Create Company\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Create company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create Company",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[GET]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// Response body should have property \\"data.name\\"
pm.test(\\"[GET]::/crm/companies/:id - Content check if property 'data.name' exists\\", function() {
   pm.expect((typeof jsonData.data.name !== \\"undefined\\")).to.be.true;
});
",
                      "// Response body should have value \\"Integration Test: Create Company\\" for \\"data.name\\"
if (jsonData?.data.name) {
pm.test(\\"[GET]::/crm/companies/:id - Content check if value for 'data.name' matches 'Integration Test: Create Company'\\", function() {
  pm.expect(jsonData.data.name).to.eql(\\"Integration Test: Create Company\\");
})};
",
                      "",
                      "// pm.collectionVariables - Set companyName as variable for jsonData.data.name
if (jsonData?.data?.name) {
   pm.collectionVariables.set(\\"companyName\\", jsonData.data.name);
   console.log(\\"- use {{companyName}} as collection variable for value\\",jsonData.data.name);
} else {
   console.log('INFO - Unable to assign variable {{companyName}}, as jsonData.data.name is undefined.');
};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Fetch Company",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "Get company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "Fetch Company",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                    ":id",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [
                    Object {
                      "description": Object {
                        "content": "(Required) ID of the record you are acting upon.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "id",
                      "type": "any",
                      "value": "<string>",
                    },
                  ],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[PATCH]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Update Company",
              "protocolProfileBehavior": Object {
                "disableBodyPruning": true,
              },
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{
    \\"name\\": \\"Integration Test: Update Company\\",
    \\"owner_id\\": \\"<string>\\",
    \\"image_url\\": \\"<string>\\",
    \\"description\\": \\"<string>\\",
    \\"vat_number\\": \\"<string>\\",
    \\"currency\\": \\"<string>\\",
    \\"status\\": \\"<string>\\",
    \\"fax\\": \\"<string>\\",
    \\"bank_accounts\\": [
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        },
        {
            \\"iban\\": \\"<string>\\",
            \\"bic\\": \\"<string>\\"
        }
    ],
    \\"websites\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"addresses\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\",
            \\"name\\": \\"<string>\\",
            \\"line1\\": \\"<string>\\",
            \\"line2\\": \\"<string>\\",
            \\"city\\": \\"<string>\\",
            \\"state\\": \\"<string>\\",
            \\"postal_code\\": \\"<string>\\",
            \\"country\\": \\"<string>\\",
            \\"latitude\\": \\"<string>\\",
            \\"longitude\\": \\"<string>\\"
        }
    ],
    \\"social_links\\": [
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"url\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"phone_numbers\\": [
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"number\\": \\"<string>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"emails\\": [
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        },
        {
            \\"email\\": \\"<email>\\",
            \\"id\\": \\"<string>\\",
            \\"type\\": \\"<string>\\"
        }
    ],
    \\"custom_fields\\": [
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        },
        {
            \\"id\\": \\"<string>\\",
            \\"value\\": \\"<string>\\"
        }
    ],
    \\"tags\\": [
        \\"<string>\\",
        \\"<string>\\"
    ]
}",
                },
                "description": Object {
                  "content": "Update company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "portman-id-{{$randomInt}}",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "PATCH",
                "name": "Update Company",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                    ":id",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [
                    Object {
                      "description": Object {
                        "content": "(Required) ID of the record you are acting upon.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "id",
                      "type": "string",
                      "value": "123456789",
                    },
                  ],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Set response object as internal variable
let jsonData = {};
try {jsonData = pm.response.json();}catch(e){}
",
                      "// Response body should have property \\"data.name\\"
pm.test(\\"[GET]::/crm/companies/:id - Content check if property 'data.name' exists\\", function() {
   pm.expect((typeof jsonData.data.name !== \\"undefined\\")).to.be.true;
});
",
                      "// Response body should have value \\"Integration Test: Update Company\\" for \\"data.name\\"
if (jsonData?.data.name) {
pm.test(\\"[GET]::/crm/companies/:id - Content check if value for 'data.name' matches 'Integration Test: Update Company'\\", function() {
  pm.expect(jsonData.data.name).to.eql(\\"Integration Test: Update Company\\");
})};
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Verify Company Updated",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "Get company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "Verify Company Updated",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                    ":id",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [
                    Object {
                      "description": Object {
                        "content": "(Required) ID of the record you are acting upon.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "id",
                      "type": "any",
                      "value": "<string>",
                    },
                  ],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate status 2xx 
pm.test(\\"[DELETE]::/crm/companies/:id - Status code is 2xx\\", function () {
   pm.response.to.be.success;
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Delete Company",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "Delete company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "DELETE",
                "name": "Delete Company",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                    ":id",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [
                    Object {
                      "description": Object {
                        "content": "(Required) ID of the record you are acting upon.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "id",
                      "type": "any",
                      "value": "<string>",
                    },
                  ],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies/:id - Response status code is 404\\", function () {
    pm.expect(pm.response.code).to.equal(404);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Verify Company Deleted",
              "request": Object {
                "auth": Object {
                  "bearer": Array [
                    Object {
                      "key": "token",
                      "type": "any",
                      "value": "{{bearerToken}}",
                    },
                  ],
                  "type": "bearer",
                },
                "description": Object {
                  "content": "Get company",
                  "type": "text/plain",
                },
                "header": Array [
                  Object {
                    "description": Object {
                      "content": "(Required) ID of the consumer which you want to get or push data from",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-consumer-id",
                    "value": "<string>",
                  },
                  Object {
                    "description": Object {
                      "content": "(Required) The ID of your Unify ApiDeck application",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-app-id",
                    "value": "{{applicationId}}",
                  },
                  Object {
                    "description": Object {
                      "content": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
                      "type": "text/plain",
                    },
                    "disabled": false,
                    "key": "x-apideck-service-id",
                    "value": "<string>",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "Verify Company Deleted",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                    ":id",
                  ],
                  "query": Array [
                    Object {
                      "description": Object {
                        "content": "Include raw response. Mostly used for debugging purposes",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "raw",
                      "value": "true",
                    },
                  ],
                  "variable": Array [
                    Object {
                      "description": Object {
                        "content": "(Required) ID of the record you are acting upon.",
                        "type": "text/plain",
                      },
                      "disabled": false,
                      "key": "id",
                      "type": "any",
                      "value": "<string>",
                    },
                  ],
                },
              },
              "response": Array [],
            },
          ],
          "name": "companies",
        },
      ],
      "name": "Integration Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "string",
      "value": "http://localhost:3050",
    },
    Object {
      "key": "bearerToken",
      "type": "string",
      "value": "f7a82583-e42a-47ec-8325-f9e5ef231303-KAwRX5cg3DgAhvz5BKs8-9200e88f-b82e-4980-99ef-79aabd71ee48",
    },
    Object {
      "key": "unifiedApi",
      "type": "string",
      "value": "crm",
    },
    Object {
      "key": "applicationId",
      "type": "string",
      "value": "2222",
    },
    Object {
      "key": "serviceId",
      "type": "string",
      "value": "activecampaign",
    },
    Object {
      "key": "consumerId",
      "type": "string",
      "value": "testing_user_id",
    },
    Object {
      "key": "resource",
      "type": "string",
      "value": "lead",
    },
    Object {
      "key": "connectorApiKey",
      "type": "string",
      "value": "a1ffa05a296f99780689a6ebd44b7c966e5591ee13cd38e5116c26e22104ac1bfaa9e00a",
    },
  ],
}
`;
