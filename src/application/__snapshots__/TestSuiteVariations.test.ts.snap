// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TestSuite Variations openApiRequest content-types should handle wildcard request content-type and generate multiple variations 1`] = `
Object {
  "_": Object {
    "postman_id": "11111111-1111-1111-1111-111111111111",
  },
  "event": Array [],
  "info": Object {
    "name": "Request Multi",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "Create multi",
      "request": Object {
        "body": Object {
          "mode": "raw",
          "options": Object {
            "raw": Object {
              "language": "json",
            },
          },
          "raw": "{\\"value\\":\\"example\\"}",
        },
        "method": "POST",
        "url": Object {
          "host": Array [
            "{{baseUrl}}",
          ],
          "path": Array [
            "multi",
          ],
          "query": Array [],
          "variable": Array [],
        },
      },
      "response": Array [],
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/multi - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create multi[WildcardRequest][application/json]",
              "request": Object {
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{\\"value\\":\\"example\\"}",
                },
                "header": Array [
                  Object {
                    "key": "Content-Type",
                    "value": "application/json",
                  },
                ],
                "method": "POST",
                "name": "Create multi[WildcardRequest][application/json]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "multi",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/multi - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create multi[WildcardRequest][text/plain]",
              "request": Object {
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{\\"value\\":\\"example\\"}",
                },
                "header": Array [
                  Object {
                    "key": "Content-Type",
                    "value": "text/plain",
                  },
                ],
                "method": "POST",
                "name": "Create multi[WildcardRequest][text/plain]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "multi",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "Request Multi Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "any",
      "value": "https://example.com",
    },
  ],
}
`;

exports[`TestSuite Variations openApiRequest content-types should use a specific request content-type when multiple are available 1`] = `
Object {
  "_": Object {
    "postman_id": "11111111-1111-1111-1111-111111111111",
  },
  "event": Array [],
  "info": Object {
    "name": "Request Multi",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "Create multi",
      "request": Object {
        "body": Object {
          "mode": "raw",
          "options": Object {
            "raw": Object {
              "language": "json",
            },
          },
          "raw": "{\\"value\\":\\"example\\"}",
        },
        "method": "POST",
        "url": Object {
          "host": Array [
            "{{baseUrl}}",
          ],
          "path": Array [
            "multi",
          ],
          "query": Array [],
          "variable": Array [],
        },
      },
      "response": Array [],
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[POST]::/multi - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "Create multi[SpecificRequest]",
              "request": Object {
                "body": Object {
                  "mode": "raw",
                  "options": Object {
                    "raw": Object {
                      "language": "json",
                    },
                  },
                  "raw": "{\\"value\\":\\"example\\"}",
                },
                "header": Array [
                  Object {
                    "key": "Content-Type",
                    "value": "text/plain",
                  },
                ],
                "method": "POST",
                "name": "Create multi[SpecificRequest]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "multi",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "Request Multi Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "any",
      "value": "https://example.com",
    },
  ],
}
`;

exports[`TestSuite Variations openApiResponse content-types should handle wildcard content-type and generate multiple variations 1`] = `
Object {
  "_": Object {
    "postman_id": "cccccccc-cccc-cccc-cccc-cccccccccccc",
  },
  "event": Array [],
  "info": Object {
    "name": "Minimal CRM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "List companies",
      "request": Object {
        "header": Array [
          Object {
            "key": "x-apideck-consumer-id",
            "value": "test_consumer",
          },
          Object {
            "key": "x-apideck-app-id",
            "value": "2222",
          },
          Object {
            "key": "x-apideck-service-id",
            "value": "salesforce",
          },
        ],
        "method": "GET",
        "url": Object {
          "host": Array [
            "{{baseUrl}}",
          ],
          "path": Array [
            "crm",
            "companies",
          ],
          "query": Array [],
          "variable": Array [],
        },
      },
      "response": Array [],
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List companies[WildcardContentType][application/json]",
              "request": Object {
                "header": Array [
                  Object {
                    "key": "x-apideck-consumer-id",
                    "value": "test_consumer",
                  },
                  Object {
                    "key": "x-apideck-app-id",
                    "value": "2222",
                  },
                  Object {
                    "key": "x-apideck-service-id",
                    "value": "salesforce",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List companies[WildcardContentType][application/json]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List companies[WildcardContentType][text/plain]",
              "request": Object {
                "header": Array [
                  Object {
                    "key": "x-apideck-consumer-id",
                    "value": "test_consumer",
                  },
                  Object {
                    "key": "x-apideck-app-id",
                    "value": "2222",
                  },
                  Object {
                    "key": "x-apideck-service-id",
                    "value": "salesforce",
                  },
                  Object {
                    "key": "Accept",
                    "value": "text/plain",
                  },
                ],
                "method": "GET",
                "name": "List companies[WildcardContentType][text/plain]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "Minimal CRM Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "any",
      "value": "https://unify.apideck.com",
    },
  ],
}
`;

exports[`TestSuite Variations openApiResponse content-types should use a specific content-type when multiple are available 1`] = `
Object {
  "_": Object {
    "postman_id": "cccccccc-cccc-cccc-cccc-cccccccccccc",
  },
  "event": Array [],
  "info": Object {
    "name": "Minimal CRM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "List companies",
      "request": Object {
        "header": Array [
          Object {
            "key": "x-apideck-consumer-id",
            "value": "test_consumer",
          },
          Object {
            "key": "x-apideck-app-id",
            "value": "2222",
          },
          Object {
            "key": "x-apideck-service-id",
            "value": "salesforce",
          },
        ],
        "method": "GET",
        "url": Object {
          "host": Array [
            "{{baseUrl}}",
          ],
          "path": Array [
            "crm",
            "companies",
          ],
          "query": Array [],
          "variable": Array [],
        },
      },
      "response": Array [],
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "listen": "test",
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                    "type": "text/javascript",
                  },
                },
              ],
              "name": "List companies[SpecificContentType]",
              "request": Object {
                "header": Array [
                  Object {
                    "key": "x-apideck-consumer-id",
                    "value": "test_consumer",
                  },
                  Object {
                    "key": "x-apideck-app-id",
                    "value": "2222",
                  },
                  Object {
                    "key": "x-apideck-service-id",
                    "value": "salesforce",
                  },
                  Object {
                    "key": "Accept",
                    "value": "application/json",
                  },
                ],
                "method": "GET",
                "name": "List companies[SpecificContentType]",
                "url": Object {
                  "host": Array [
                    "{{baseUrl}}",
                  ],
                  "path": Array [
                    "crm",
                    "companies",
                  ],
                  "query": Array [],
                  "variable": Array [],
                },
              },
              "response": Array [],
            },
          ],
          "name": "Minimal CRM Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "any",
      "value": "https://unify.apideck.com",
    },
  ],
}
`;

exports[`TestSuite Variations response codes should handle partial wildcard response codes and generate multiple variations 1`] = `
Object {
  "_": Object {
    "postman_id": "cccccccc-cccc-cccc-cccc-cccccccccccc",
  },
  "event": Array [],
  "info": Object {
    "name": "Minimal CRM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "List companies",
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][application/xml]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][application/json]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][text/plain]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][application/xml]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][application/json]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][text/plain]",
            },
          ],
          "name": "Minimal CRM Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "value": "https://unify.apideck.com",
    },
  ],
}
`;

exports[`TestSuite Variations response codes should handle wildcard response codes and generate multiple variations 1`] = `
Object {
  "_": Object {
    "postman_id": "cccccccc-cccc-cccc-cccc-cccccccccccc",
  },
  "event": Array [],
  "info": Object {
    "name": "Minimal CRM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "List companies",
    },
    Object {
      "event": Array [],
      "item": Array [
        Object {
          "event": Array [],
          "item": Array [
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][application/xml]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][application/json]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 200\\", function () {
    pm.expect(pm.response.code).to.equal(200);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][200][text/plain]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][application/xml]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][application/json]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 201\\", function () {
    pm.expect(pm.response.code).to.equal(201);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][201][text/plain]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 400\\", function () {
    pm.expect(pm.response.code).to.equal(400);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][400][application/json]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 400\\", function () {
    pm.expect(pm.response.code).to.equal(400);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][400][application/xml]",
            },
            Object {
              "event": Array [
                Object {
                  "script": Object {
                    "exec": Array [
                      "// Validate response status code 
pm.test(\\"[GET]::/crm/companies - Response status code is 400\\", function () {
    pm.expect(pm.response.code).to.equal(400);
});
",
                    ],
                  },
                },
              ],
              "name": "List companies[WildcardCode][400][text/plain]",
            },
            Object {
              "event": Array [],
              "name": "List companies[WildcardCode][default][application/xml]",
            },
            Object {
              "event": Array [],
              "name": "List companies[WildcardCode][default][application/json]",
            },
            Object {
              "event": Array [],
              "name": "List companies[WildcardCode][default][text/plain]",
            },
          ],
          "name": "Minimal CRM Variations",
        },
      ],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "value": "https://unify.apideck.com",
    },
  ],
}
`;

exports[`TestSuite Variations should generateVariationTests for variations 1`] = `
Object {
  "_": Object {
    "postman_id": "cccccccc-cccc-cccc-cccc-cccccccccccc",
  },
  "event": Array [],
  "info": Object {
    "name": "Minimal CRM",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": undefined,
  },
  "item": Array [
    Object {
      "event": Array [],
      "name": "List companies",
      "request": Object {
        "header": Array [
          Object {
            "key": "x-apideck-consumer-id",
            "value": "test_consumer",
          },
          Object {
            "key": "x-apideck-app-id",
            "value": "2222",
          },
          Object {
            "key": "x-apideck-service-id",
            "value": "salesforce",
          },
        ],
        "method": "GET",
        "url": Object {
          "host": Array [
            "{{baseUrl}}",
          ],
          "path": Array [
            "crm",
            "companies",
          ],
          "query": Array [],
          "variable": Array [],
        },
      },
      "response": Array [],
    },
    Object {
      "event": Array [],
      "item": Array [],
      "name": "Variation Tests",
    },
  ],
  "variable": Array [
    Object {
      "key": "baseUrl",
      "type": "any",
      "value": "https://unify.apideck.com",
    },
  ],
}
`;
